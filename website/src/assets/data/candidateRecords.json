{"papers":[{"url":"https://www.semanticscholar.org/paper/b2c4fdb49bdb23e6ad0ac3272029324157046ea7","title":"Automated Repair of Code from Language Models","venue":"","year":2022,"referenceCount":49,"citationCount":0,"influentialCitationCount":0,"publicationDate":2022,"authors":"Zhiyu Fan,Xiang Gao,M. Mirchev,Abhik Roychoudhury,Shin Hwei Tan","id":"b2c4fdb49bdb23e6ad0ac3272029324157046ea7","summary":"The study revealed that automatically generated code shares common programming mistakes with human-crafted solutions, indicating APR techniques may have potential to auto-generated code, and given bug location information provided by a statistical fault localization approach, Codex edit mode is similar to or better than existing Java repair tools TBar and Recoder in correcting incorrect solutions.","score":7},{"url":"https://www.semanticscholar.org/paper/0bcd59da541fdae66884afba8d25475a54a9da1a","title":"Automated Repair of Programs from Large Language Models","venue":"","year":2022,"referenceCount":49,"citationCount":1,"influentialCitationCount":0,"publicationDate":"21/05/2022","authors":"Zhiyu Fan,Xiang Gao,M. Mirchev,Abhik Roychoudhury,Shin Hwei Tan","id":"0bcd59da541fdae66884afba8d25475a54a9da1a","summary":"The study revealed that automatically generated code shares common programming mistakes with human-crafted solutions, indicating APR techniques may have potential to auto-generated code, and given bug location information provided by a statistical fault localization approach, Codex edit mode is similar to or better than existing Java repair tools TBar and Recoder in correcting incorrect solutions.","score":7},{"url":"https://www.semanticscholar.org/paper/e73a16490c29530c37b49f6a30592790e7caaaa4","title":"Don't Complete It! Preventing Unhelpful Code Completion for Productive and Sustainable Neural Code Completion Systems","venue":"","year":2022,"referenceCount":33,"citationCount":0,"influentialCitationCount":0,"publicationDate":"13/09/2022","authors":"Zhensu Sun,Xiaoning Du,Fu Song,Shangwen Wang,Mingze Ni,Li Li","id":"e73a16490c29530c37b49f6a30592790e7caaaa4","summary":"An early-rejection mechanism to turn down low-return prompts by foretelling the code completion qualities without sending them to the codepletion system is proposed and a lightweight Transformer-based estimator is proposed to demonstrate the feasibility of the mechanism.","score":6},{"url":"https://www.semanticscholar.org/paper/6074c7b75f27ca9adb6d74b080c07d5d079c3ea0","title":"Improving automatically generated code from Codex via Automated Program Repair","venue":"ArXiv","year":2022,"referenceCount":45,"citationCount":4,"influentialCitationCount":0,"publicationDate":2022,"authors":"Zhiyu Fan,Xiang Gao,Abhik Roychoudhury,Shin Hwei Tan","id":"6074c7b75f27ca9adb6d74b080c07d5d079c3ea0","summary":"This study systematically study whether automated program repair (APR) techniques can fix the incorrect solutions produced by language models in LeetCode contests, revealing that automatically generated codes share some common programming mistakes with human-crafted solutions, indicating existing APR tools have the potential to fix auto-generated code.","score":6},{"url":"https://www.semanticscholar.org/paper/1b4c19168410fb2690d285b205ab2281793db81a","title":"A Scalable and Extensible Approach to Benchmarking NL2Code for 18 Programming Languages","venue":"ArXiv","year":2022,"referenceCount":27,"citationCount":4,"influentialCitationCount":1,"publicationDate":2022,"authors":"Federico Cassano,John Gouwar,Daniel Nguyen,S. Nguyen,Luna Phipps-Costin,Donald Pinckney,Ming-Ho Yee,Yangtian Zi,Carolyn Jane Anderson,Molly Q. Feldman,Arjun Guha,M. Greenberg,Abhinav Jangda","id":"1b4c19168410fb2690d285b205ab2281793db81a","summary":"It is shown that on several languages, Codex matches and even exceeds its performance on Python, and a general approach is described for easily adding support for new benchmarks and languages to MultiPL-E, the first multi-language parallel benchmark for natural-language-to-code-generation.","score":6},{"url":"https://www.semanticscholar.org/paper/fba0b0817dbc8200b41a1de22654b54b778a11e9","title":"Recommending Root-Cause and Mitigation Steps for Cloud Incidents using Large Language Models","venue":"ArXiv","year":2023,"referenceCount":64,"citationCount":0,"influentialCitationCount":0,"publicationDate":"10/01/2023","authors":"Toufique Ahmed,Supriyo Ghosh,Chetan Bansal,T. Zimmermann,Xuchao Zhang,S. Rajmohan","id":"fba0b0817dbc8200b41a1de22654b54b778a11e9","summary":"This work does the first large-scale study to evaluate the effectiveness of GPT-3.x models for helping engineers root cause and mitigate production incidents and compares several large language models in zero-shot, fine-tuned and multi-task setting using semantic and lexical metrics.","score":6},{"url":"https://www.semanticscholar.org/paper/68edfd62d2619fb4af7c2469edb95b9e2fe4544a","title":"Execution-based Code Generation using Deep Reinforcement Learning","venue":"ArXiv","year":2023,"referenceCount":45,"citationCount":0,"influentialCitationCount":0,"publicationDate":"31/01/2023","authors":"Parshin Shojaee,Aneesh Jain,S. Tipirneni,C. Reddy","id":"68edfd62d2619fb4af7c2469edb95b9e2fe4544a","summary":"PPOCoder is a new framework for code generation that combines pretrained PL models with Proximal Policy Optimization (PPO) deep reinforcement learning and employs execution feedback as the external source of knowledge into the model optimization, which is transferable across different code generation tasks and PLs.","score":6},{"url":"https://www.semanticscholar.org/paper/3d5463a16d85d9d1d0d8ebb4117a31aca3c240ff","title":"Fooling MOSS Detection with Pretrained Language Models","venue":"International Conference on Information and Knowledge Management","year":2022,"referenceCount":70,"citationCount":2,"influentialCitationCount":0,"publicationDate":"19/01/2022","authors":"Stella Rose Biderman,Edward Raff","id":"3d5463a16d85d9d1d0d8ebb4117a31aca3c240ff","summary":"It is found that a student using GPT-J can complete introductory level programming assignments without triggering suspicion from MOSS, a widely used software similarity and plagiarism detection tool.","score":5},{"url":"https://www.semanticscholar.org/paper/6032212d5790b6a580d68d469a9895aad6238c89","title":"Diverse Title Generation for Stack Overflow Posts with Multiple Sampling Enhanced Transformer","venue":"ArXiv","year":2022,"referenceCount":56,"citationCount":0,"influentialCitationCount":0,"publicationDate":"24/08/2022","authors":"Fengji Zhang,Jin Liu,Yao Wan,Xiao Yu,Xiao Liu,J. Keung","id":"6032212d5790b6a580d68d469a9895aad6238c89","summary":"A novel approach to automatically generate multiple post titles from the given code snippets, using the maximal marginal multiple nucleus sampling strategy to generate multiple high-quality and diverse title candidates at a time for the developers to choose from.","score":5},{"url":"https://www.semanticscholar.org/paper/ebd4bec684808aff360b5f255d15c0d112ba13d3","title":"Explicit Knowledge Transfer for Weakly-Supervised Code Generation","venue":"ArXiv","year":2022,"referenceCount":29,"citationCount":0,"influentialCitationCount":0,"publicationDate":"30/11/2022","authors":"Zhangir Azerbayev,Ansong Ni,Hailey Schoelkopf,Dragomir R. Radev","id":"ebd4bec684808aff360b5f255d15c0d112ba13d3","summary":"This paper proposes explicit knowledge transfer (EKT), which uses the few-shot capabilities of a teacher LLM to create NL-code pairs that are filter for correctness and fine-tune the student on, and finds that EKT not only yields better performance than training with expert iteration, but also outperforms knowledge distillation, another form of knowledge transfer.","score":5},{"url":"https://www.semanticscholar.org/paper/d3a7a4543d83f568f79d1febe8379465ff0140c9","title":"A Survey of Deep Learning for Mathematical Reasoning","venue":"ArXiv","year":2022,"referenceCount":216,"citationCount":1,"influentialCitationCount":1,"publicationDate":"20/12/2022","authors":"Pan Lu,Liang Qiu,Wenhao Yu,S. Welleck,Kai-Wei Chang","id":"d3a7a4543d83f568f79d1febe8379465ff0140c9","summary":"This survey paper reviews the key tasks, datasets, and methods at the intersec-tion of mathematical reasoning and deep learning over the past decade, and evaluates existing benchmarks and methods and discusses future research directions.","score":5},{"url":"https://www.semanticscholar.org/paper/d8405996b4d08c304098636aedd9e1c1a1e262ee","title":"The Premature Obituary of Programming","venue":"Communications of the ACM","year":2023,"referenceCount":23,"citationCount":0,"influentialCitationCount":0,"publicationDate":"20/01/2023","authors":"D. Yellin","id":"d8405996b4d08c304098636aedd9e1c1a1e262ee","summary":"Why deep learning will not replace programming and why deep learning should not be considered as a programming language.","score":5},{"url":"https://www.semanticscholar.org/paper/1c8e15f15d67c5974445634bb971e2275e957aff","title":"Security Implications of Large Language Model Code Assistants: A User Study","venue":"ArXiv","year":2022,"referenceCount":53,"citationCount":4,"influentialCitationCount":0,"publicationDate":"20/08/2022","authors":"Gustavo Sandoval,H. Pearce,Teo Nys,R. Karri,Brendan Dolan-Gavitt,S. Garg","id":"1c8e15f15d67c5974445634bb971e2275e957aff","summary":"A security-driven user study to assess code written by student programmers when assisted by LLMs and indicates that the security impact in this setting is small: AI-assisted users produce critical security bugs at a rate no greater than 10% more than the control.","score":4},{"url":"https://www.semanticscholar.org/paper/a7435722d8ab595da5a9c70ac9160f57d0dcd75a","title":"Enabling Transformers to Understand Low-Level Programs","venue":"IEEE Conference on High Performance Extreme Computing","year":2022,"referenceCount":53,"citationCount":0,"influentialCitationCount":0,"publicationDate":"19/09/2022","authors":"Zifan Carl Guo,William S. Moses","id":"a7435722d8ab595da5a9c70ac9160f57d0dcd75a","summary":"This work applies transfer learning to low-level (LLVM) programs and study how low- level programs can be made more amenable to Transformer models through various techniques, including preprocessing, infix/prefix operators, and information deduplication.","score":4},{"url":"https://www.semanticscholar.org/paper/971e875e28f26240987d2c9470d1ee74ad204205","title":"Large Language Models are Few-shot Testers: Exploring LLM-based General Bug Reproduction","venue":"ArXiv","year":2022,"referenceCount":39,"citationCount":0,"influentialCitationCount":0,"publicationDate":"23/09/2022","authors":"Sungmin Kang,Juyeon Yoon,Shin Yoo","id":"971e875e28f26240987d2c9470d1ee74ad204205","summary":"Results show L IBRO has the potential to enhance developerency by automatically generating tests from bug reports, and is proposed as a framework that uses Large Language Models (LLMs), which have been shown to be capable of performing code-related tasks.","score":4},{"url":"https://www.semanticscholar.org/paper/825333b7efe2cade106eaf36c7e731f757974806","title":"How Readable is Model-generated Code? Examining Readability and Visual Inspection of GitHub Copilot","venue":"37th IEEE/ACM International Conference on Automated Software Engineering","year":2022,"referenceCount":28,"citationCount":0,"influentialCitationCount":0,"publicationDate":"10/10/2022","authors":"Naser Al Madi","id":"825333b7efe2cade106eaf36c7e731f757974806","summary":"The results suggest that model generated code is comparable in complexity and readability to code written by human pair programmers, and eye tracking data suggests, to a statistically significant level, that programmers direct less visual attention to model generate code.","score":4},{"url":"https://www.semanticscholar.org/paper/39e40821b7207125e54e6ed7112e55cd38c6f0c3","title":"Language Models of Code are Few-Shot Commonsense Learners","venue":"Conference on Empirical Methods in Natural Language Processing","year":2022,"referenceCount":38,"citationCount":11,"influentialCitationCount":1,"publicationDate":"13/10/2022","authors":"Aman Madaan,Shuyan Zhou,Uri Alon,Yiming Yang,Graham Neubig","id":"39e40821b7207125e54e6ed7112e55cd38c6f0c3","summary":"This paper shows that when this task is frame as code generation tasks, pre-trained LMs of code are better structured commonsense reasoners than L Ms of natural language, even when the downstream task does not involve source code at all.","score":4},{"url":"https://www.semanticscholar.org/paper/a6ef5bad716091fb1888bf365f6129628ab3a5ee","title":"ObSynth: An Interactive Synthesis System for Generating Object Models from Natural Language Specifications","venue":"ArXiv","year":2022,"referenceCount":29,"citationCount":0,"influentialCitationCount":0,"publicationDate":"20/10/2022","authors":"Alex Gu,Tamara Mitrovska,D. Vélez,Jacob Andreas,Armando Solar-Lezama","id":"a6ef5bad716091fb1888bf365f6129628ab3a5ee","summary":"ObSynth is introduced, an interactive system leveraging the domain knowledge em-bedded in large language models (LLMs) to help users design object models from high level natural language prompts, showing that it often synthesizes objects, methods, and methods users might have otherwise omitted.","score":4},{"url":"https://www.semanticscholar.org/paper/0566c1c3eeeef5c968fced6d80b77fe22d02bbd9","title":"Conversing with Copilot: Exploring Prompt Engineering for Solving CS1 Problems Using Natural Language","venue":"ArXiv","year":2022,"referenceCount":24,"citationCount":5,"influentialCitationCount":0,"publicationDate":"27/10/2022","authors":"Paul Denny,Viraj Kumar,Nasser Giacaman","id":"0566c1c3eeeef5c968fced6d80b77fe22d02bbd9","summary":"Evaluating the performance of Copilot on a publicly available dataset of 166 programming problems finds that it successfully solves around half of these problems on its very first attempt, and that it solves 60% of the remaining problems using only natural language changes to the problem description.","score":4},{"url":"https://www.semanticscholar.org/paper/ec7324a15009a9bd0b676f6b17762f759cf5dd9a","title":"Large Language Models Are Human-Level Prompt Engineers","venue":"ArXiv","year":2022,"referenceCount":51,"citationCount":12,"influentialCitationCount":2,"publicationDate":"03/11/2022","authors":"Yongchao Zhou,Andrei Ioan Muresanu,Ziwen Han,Keiran Paster,Silviu Pitis,Harris Chan,Jimmy Ba","id":"ec7324a15009a9bd0b676f6b17762f759cf5dd9a","summary":"It is shown that APE-engineered prompts can be applied to steer models toward truthfulness and/or informativeness, as well as to improve few-shot learning performance by simply prepending them to standard in-context learning prompts.","score":4},{"url":"https://www.semanticscholar.org/paper/71280dba5bda65c162f9deaffed7d3d20692ca0a","title":"SecurityEval dataset: mining vulnerability examples to evaluate machine learning-based code generation techniques","venue":"","year":2022,"referenceCount":28,"citationCount":3,"influentialCitationCount":1,"publicationDate":"07/11/2022","authors":"Mohammed Latif Siddiq,msiddiq","id":"71280dba5bda65c162f9deaffed7d3d20692ca0a","summary":"SecurityEval, an evaluation dataset that contains 130 samples for 75 vulnerability types, which are mapped to the Common Weakness Enumeration (CWE) and demonstrated using one open-source and one closed-source code generation model to evaluate.","score":4},{"url":"https://www.semanticscholar.org/paper/c192fb33f308f19ac8a5c4c2d623d56385b839be","title":"Systematic Literature Review on Solving Competitive Programming Problem with Artificial Intelligence (AI)","venue":"2022 1st International Conference on Software Engineering and Information Technology (ICoSEIT)","year":2022,"referenceCount":30,"citationCount":0,"influentialCitationCount":0,"publicationDate":"22/11/2022","authors":"Francis Alexander,Edwin Ario Abdiwijaya,Felix Pherry,A. A. Gunawan,Anderies","id":"c192fb33f308f19ac8a5c4c2d623d56385b839be","summary":"It can be concluded that the code auto-completion and code-generation tools that are available now still do not meet the necessary benchmark which is solving CP tasks, and AI still has a long way to go before competing at the highest level of CP.","score":4},{"url":"https://www.semanticscholar.org/paper/8175ce2cbb99b6a394bdac152ae39d413f4f1380","title":"Codex Hacks HackerRank: Memorization Issues and a Framework for Code Synthesis Evaluation","venue":"ArXiv","year":2022,"referenceCount":37,"citationCount":1,"influentialCitationCount":0,"publicationDate":"06/12/2022","authors":"Anjan Karmakar,Julian Aron Prenner,Marco D'Ambros,R. Robbes","id":"8175ce2cbb99b6a394bdac152ae39d413f4f1380","summary":"This work evaluates the code synthesis capabilities of the Codex model based on a set of 115 Python problem statements from a popular competitive programming portal: HackerRank, and proposes a framework for code-synthesis evaluation using variations of problem statements based on mutations.","score":4},{"url":"https://www.semanticscholar.org/paper/9e8f0d9ba4e7af673c8b214b3764e020706dd1f3","title":"Don't Generate, Discriminate: A Proposal for Grounding Language Models to Real-World Environments","venue":"ArXiv","year":2022,"referenceCount":66,"citationCount":0,"influentialCitationCount":0,"publicationDate":"19/12/2022","authors":"Yu Gu,Xiang Deng,Yu Su","id":"9e8f0d9ba4e7af673c8b214b3764e020706dd1f3","summary":"Pangu is proposed, a generic framework for grounded language understanding that capitalizes on the discriminative ability of LMs instead of their generative ability, and enables, for the first time, effective few-shot in-context learning for KBQA with large LMs such as Codex.","score":4},{"url":"https://www.semanticscholar.org/paper/12a4e62c43b829dabdb8afc60eee76aa80fa3f6e","title":"Fuzzing Deep-Learning Libraries via Large Language Models","venue":"ArXiv","year":2022,"referenceCount":65,"citationCount":0,"influentialCitationCount":0,"publicationDate":"30/12/2022","authors":"Yinlin Deng,Chun Xia,Haoran Peng,Chenyuan Yang,Lingming Zhang","id":"12a4e62c43b829dabdb8afc60eee76aa80fa3f6e","summary":"LLMFuzz is the first automated approach to directly leveraging Large Pre-trained Language Models (LLMs) to generate input programs for fuzzing DL libraries, and is able to detect 65 bugs, with 41 already confirmed as previously unknown bugs.","score":4},{"url":"https://www.semanticscholar.org/paper/c72ac81c4ac414314b52cf8f5b77370f8d0875d4","title":"Generating High-Precision Feedback for Programming Syntax Errors using Large Language Models","venue":"ArXiv","year":2023,"referenceCount":36,"citationCount":0,"influentialCitationCount":0,"publicationDate":"24/01/2023","authors":"Tung Phung,J. Cambronero,Sumit Gulwani,Tobias Kohn,R. Majumdar,A. Singla,Gustavo Soares","id":"c72ac81c4ac414314b52cf8f5b77370f8d0875d4","summary":"The key idea behind PyFiXV is to use a novel run-time validation mechanism to decide whether the generated feedback is suitable for sharing with the student; notably, this validation mechanism also provides a precision knob to educators.","score":4},{"url":"https://www.semanticscholar.org/paper/0885556b71b24a641b4ffe139afd4d2712228cff","title":"Beware of the Unexpected: Bimodal Taint Analysis","venue":"ArXiv","year":2023,"referenceCount":54,"citationCount":0,"influentialCitationCount":0,"publicationDate":"25/01/2023","authors":"Yiu Wai Chow,Max Schäfer,Michael Pradel","id":"0885556b71b24a641b4ffe139afd4d2712228cff","summary":"Fluffy is presented, a bimodal taint analysis that combines static analysis, which reasons about data flow, with machine learning, which probabilistically determines which flows are potentially problematic.","score":4},{"url":"https://www.semanticscholar.org/paper/e9a64e58855dbbc725203d0202ceb9e7f8b7bb36","title":"A Survey of Learning-based Automated Program Repair","venue":"ArXiv","year":2023,"referenceCount":185,"citationCount":1,"influentialCitationCount":0,"publicationDate":"09/01/2023","authors":"Quanjun Zhang,Chunrong Fang,Yuxiang Ma,Weisong Sun,Zhenyu Chen","id":"e9a64e58855dbbc725203d0202ceb9e7f8b7bb36","summary":"This work presents a meta-modelling system that automates the very labor-intensive and therefore time-heavy and therefore expensive and expensive process of manually cataloging and cataloging individual neurons in the brain.","score":3},{"url":"https://www.semanticscholar.org/paper/b1eebb2df3b9ff7ff2b00fb1a786f6ada2caebce","title":"Towards a Mathematics Formalisation Assistant using Large Language Models","venue":"ArXiv","year":2022,"referenceCount":26,"citationCount":0,"influentialCitationCount":0,"publicationDate":"14/11/2022","authors":"Ayush Agrawal,Siddhartha Gadgil,Navin Goyal,Ashvni Narayanan,Anand Tadipatri","id":"b1eebb2df3b9ff7ff2b00fb1a786f6ada2caebce","summary":"The abilities of a large language model (Codex) to help with formalisation in the Lean theorem prover are explored, finding that with careful inputdependent prompt selection and postprocessing, Codex is able to formalise short mathematical statements at undergrad level with nearly 75% accuracy for 120 theorem statements.","score":3},{"url":"https://www.semanticscholar.org/paper/4ddc26b3a5fe9044b97b408d163f7464d769ebbf","title":"CODEP: Grammatical Seq2Seq Model for General-Purpose Code Generation","venue":"ArXiv","year":2022,"referenceCount":41,"citationCount":2,"influentialCitationCount":0,"publicationDate":2022,"authors":"Yihong Dong,Ge Li,Zhi Jin","id":"4ddc26b3a5fe9044b97b408d163f7464d769ebbf","summary":"This paper proposes CODEP, a grammatical Seq2Seq code generation framework equipped with a Pushdown automaton (PDA) module, and constructs the DPA for the most popular GPL Python and conducts extensive experiments to evaluate the effectiveness.","score":3},{"url":"https://www.semanticscholar.org/paper/7497360b0f411a44aa6afbd8b830050c40ec8aed","title":"Dataset of Student Solutions to Algorithm and Data Structure Programming Assignments","venue":"International Conference on Language Resources and Evaluation","year":2022,"referenceCount":18,"citationCount":0,"influentialCitationCount":0,"publicationDate":2022,"authors":"Fynn Petersen-Frey,Marcus Soll,Louis Kobras,Melf Johannsen,Peter Kling,Chris Biemann","id":"7497360b0f411a44aa6afbd8b830050c40ec8aed","summary":"This paper presents a dataset containing source code solutions to algorithmic programming exercises solved by hundreds of Bachelor-level students at the University of Hamburg, and plans to extend the dataset with tasks and solutions from upcoming courses.","score":3},{"url":"https://www.semanticscholar.org/paper/4f278ab5ad629267e06196e273252262854c1c57","title":"BF++: a language for general-purpose program synthesis","venue":"","year":2021,"referenceCount":57,"citationCount":0,"influentialCitationCount":0,"publicationDate":"23/01/2021","authors":"Vadim Liventsev,A. Harma,M. Petkovi'c","id":"4f278ab5ad629267e06196e273252262854c1c57","summary":"A new programming language, BF ++ is proposed, designed speciﬁcally for automatic programming of agents in a Partially Observable Markov Decision Process (POMDP) setting and apply neural program synthesis to solve standard OpenAI Gym benchmarks.","score":3},{"url":"https://www.semanticscholar.org/paper/92173d081b15824d22a9ef070e118744ceee8052","title":"Show Your Work: Scratchpads for Intermediate Computation with Language Models","venue":"ArXiv","year":2021,"referenceCount":30,"citationCount":112,"influentialCitationCount":11,"publicationDate":"30/11/2021","authors":"Maxwell Nye,Anders Andreassen,Guy Gur-Ari,H. Michalewski,Jacob Austin,David Bieber,David Dohan,Aitor Lewkowycz,Maarten Bosma,D. Luan,Charles Sutton,Augustus Odena","id":"92173d081b15824d22a9ef070e118744ceee8052","summary":"Surprisingly, large pre-trained language models are able to perform complex multistep computations—even in the few-shot regime—when asked to perform the operation “step by step”, showing the results of intermediate computations.","score":3},{"url":"https://www.semanticscholar.org/paper/a5731122200fbb8b37f048010a1e1ca4474aa606","title":"Examining Zero-Shot Vulnerability Repair with Large Language Models","venue":"","year":2021,"referenceCount":56,"citationCount":7,"influentialCitationCount":0,"publicationDate":"03/12/2021","authors":"H. Pearce,B. Tan,Baleegh Ahmad,R. Karri,Brendan Dolan-Gavitt","id":"a5731122200fbb8b37f048010a1e1ca4474aa606","summary":"This work examines the use of large language models for code (such as OpenAI’s Codex and AI21's Jurassic J-1) for zero-shot vulnerability repair, and investigates challenges in the design of prompts that coax LLMs into generating repaired versions of insecure code.","score":3},{"url":"https://www.semanticscholar.org/paper/5ff9032d0f7f246d01ae7b2c231ab03469a7344a","title":"Can OpenAI Codex and Other Large Language Models Help Us Fix Security Bugs?","venue":"ArXiv","year":2021,"referenceCount":56,"citationCount":20,"influentialCitationCount":1,"publicationDate":2021,"authors":"H. Pearce,B. Tan,Baleegh Ahmad,R. Karri,Brendan Dolan-Gavitt","id":"5ff9032d0f7f246d01ae7b2c231ab03469a7344a","summary":"This work examines the use of large language models for code (such as OpenAI's Codex and AI21's Jurassic J-1) for zero-shot vulnerability repair, and investigates challenges in the design of prompts that coax LLMs into generating repaired versions of insecure code.","score":3},{"url":"https://www.semanticscholar.org/paper/9a2ca811882ed7513f83014b9de4fb3b4ab218c4","title":"C OMPOSITIONAL G ENERALIZATION AND D ECOMPOSITION IN N EURAL P ROGRAM S YNTHESIS","venue":"","year":null,"referenceCount":0,"citationCount":0,"influentialCitationCount":0,"publicationDate":null,"authors":"","id":"9a2ca811882ed7513f83014b9de4fb3b4ab218c4","summary":"A suite of generalization tasks, which measure different types of compositional generalization that are desirable for program synthesis and are particularly difﬁcult for current sequence to sequence models, are proposed.","score":3},{"url":"https://www.semanticscholar.org/paper/a2b6e1f7d8a7963d321f29fca7c01eeb1ebd7f0f","title":"P ATCH G ENERATION WITH L ANGUAGE M ODELS : F EASIBILITY AND S CALING B EHAVIOR","venue":"","year":2022,"referenceCount":23,"citationCount":0,"influentialCitationCount":0,"publicationDate":2022,"authors":"Sophia Kolak,Ruben Martins,Claire Le Goues,V. Hellendoorn","id":"a2b6e1f7d8a7963d321f29fca7c01eeb1ebd7f0f","summary":"This work highlights a noticeable correlation of model size with test-passing accuracy and patch ranking quality, and the propensity for especially the largest models to generate candidate patches that closely resemble (if not exactly match), the original developer patch.","score":3},{"url":"https://www.semanticscholar.org/paper/78863000eb70945cc8d791d45d4a3fe8a6521cb6","title":"Open-ended Knowledge Tracing for Computer Science Education","venue":"Conference on Empirical Methods in Natural Language Processing","year":2022,"referenceCount":55,"citationCount":0,"influentialCitationCount":0,"publicationDate":2022,"authors":"Naiming Liu,Zichao Wang","id":"78863000eb70945cc8d791d45d4a3fe8a6521cb6","summary":"An initial solution to the OKT problem is developed, a student knowledge-guided code generation approach that combines program synthesis methods using language models with student knowledge tracing methods and a series of quantitative and qualitative experiments on a real-world student code dataset to validate and demonstrate the promise of OKT.","score":3},{"url":"https://www.semanticscholar.org/paper/56e6d62c638a24411f12d15cdc8821a31fc495c8","title":"Source Code Generation from Descriptions in a Natural Language","venue":"","year":2022,"referenceCount":70,"citationCount":0,"influentialCitationCount":0,"publicationDate":2022,"authors":"Bc. Jan Pašek","id":"56e6d62c638a24411f12d15cdc8821a31fc495c8","summary":"This work introduces CodeFormer, a Python source code generator pretrained on a massive GitHub crawl consisting of 230M Python functions, and releases the resulting model, built on BART architecture, which generates Python functions based on descriptions in English.","score":3},{"url":"https://www.semanticscholar.org/paper/1aed58bd07026492194672adec494dc37c894a28","title":"Leveraging Automated Unit Tests for Unsupervised Code Translation","venue":"International Conference on Learning Representations","year":2021,"referenceCount":60,"citationCount":19,"influentialCitationCount":2,"publicationDate":"13/10/2021","authors":"Baptiste Rozière,J Zhang,François Charton,M. Harman,Gabriel Synnaeve,Guillaume Lample","id":"1aed58bd07026492194672adec494dc37c894a28","summary":"This work proposes to leverage an automated unit-testing system to filter out invalid translations, thereby creating a fully tested parallel corpus, and finds that fine-tuning an unsupervised model with this filtered data set significantly reduces the noise in the translations so-generated, comfortably outperforming the state of the art for all language pairs studied.","score":3},{"url":"https://www.semanticscholar.org/paper/52db8674337e5d86dcb96d013734befc8c3d4581","title":"Large Language Models are not Models of Natural Language: they are Corpus Models.","venue":"IEEE Access","year":2021,"referenceCount":63,"citationCount":1,"influentialCitationCount":0,"publicationDate":"13/12/2021","authors":"C. Veres","id":"52db8674337e5d86dcb96d013734befc8c3d4581","summary":"It is argued that the term language model is misleading because deep learning models are not theoretical models of language and proposed the adoption of corpus model instead, which better reflects the genesis and contents of the model.","score":3},{"url":"https://www.semanticscholar.org/paper/7b5aa186ca8abc585607c5ec91562e127a398601","title":"Open-Ended Knowledge Tracing","venue":"ArXiv","year":2022,"referenceCount":64,"citationCount":0,"influentialCitationCount":0,"publicationDate":"21/02/2022","authors":"Naiming Liu,Zichao Wang,Richard Baraniuk,Andrew S. Lan","id":"7b5aa186ca8abc585607c5ec91562e127a398601","summary":"This paper develops an initial solution to the OKT problem, a student knowledge-guided code generation approach that combines program synthesis methods using language models with student knowledge tracing methods and conducts a series of quantitative and qualitative experiments on a real-world student code dataset to validate OKT and demonstrate its promise in educational applications.","score":3},{"url":"https://www.semanticscholar.org/paper/1f11601f9eb8c0bee1d1d2cc7f4fa187e8c5e525","title":"The impact of lexical and grammatical processing on generating code from natural language","venue":"Findings","year":2022,"referenceCount":19,"citationCount":4,"influentialCitationCount":2,"publicationDate":"28/02/2022","authors":"Nathanael Beau,Benoit Crabb'e","id":"1f11601f9eb8c0bee1d1d2cc7f4fa187e8c5e525","summary":"The paper highlights the importance of the lexical substitution component in the current natural language to code systems with a state-of-the-art architecture that relies on BERT encoder and a grammar-based decoder for which a formalization is provided.","score":3},{"url":"https://www.semanticscholar.org/paper/771371fb288da26a9812f5808535847a0a9c9a80","title":"A Conversational Paradigm for Program Synthesis","venue":"ArXiv","year":2022,"referenceCount":39,"citationCount":59,"influentialCitationCount":22,"publicationDate":2022,"authors":"Erik Nijkamp,Bo Pang,Hiroaki Hayashi,Lifu Tu,Haiquan Wang,Yingbo Zhou,S. Savarese,Caiming Xiong","id":"771371fb288da26a9812f5808535847a0a9c9a80","summary":"This work proposes and trains C ODE G EN, an interactive code generation model for program synthesis, and suggests that the capacity of conversational program synthesis scales as a function of the model size and data size.","score":3},{"url":"https://www.semanticscholar.org/paper/094ff971d6a8b8ff870946c9b3ce5aa173617bfb","title":"PaLM: Scaling Language Modeling with Pathways","venue":"ArXiv","year":2022,"referenceCount":173,"citationCount":540,"influentialCitationCount":78,"publicationDate":"05/04/2022","authors":"Aakanksha Chowdhery,Sharan Narang,Jacob Devlin,Maarten Bosma,Gaurav Mishra,Adam Roberts,P. Barham,Hyung Won Chung,Charles Sutton,Sebastian Gehrmann,Parker Schuh,Kensen Shi,Sasha Tsvyashchenko,Joshua Maynez,Abhishek Rao,Parker Barnes,Yi Tay,Noam M. Shazeer,Vinodkumar Prabhakaran,Emily Reif,Nan Du,B. Hutchinson,Reiner Pope,James Bradbury,Jacob Austin,M. Isard,Guy Gur-Ari,Pengcheng Yin,Toju Duke,Anselm Levskaya,S. Ghemawat,Sunipa Dev,H. Michalewski,Xavier García,Vedant Misra,Kevin Robinson,L. Fedus,Denny Zhou,Daphne Ippolito,D. Luan,Hyeontaek Lim,Barret Zoph,A. Spiridonov,Ryan Sepassi,David Dohan,Shivani Agrawal,Mark Omernick,Andrew M. Dai,T. S. Pillai,Marie Pellat,Aitor Lewkowycz,Erica Moreira,Rewon Child,Oleksandr Polozov,Katherine Lee,Zongwei Zhou,Xuezhi Wang,Brennan Saeta,Mark Díaz,Orhan Firat,Michele Catasta,Jason Wei,K. Meier-Hellstern,D. Eck,J. Dean,Slav Petrov,Noah Fiedel","id":"094ff971d6a8b8ff870946c9b3ce5aa173617bfb","summary":"A 540-billion parameter, densely activated, Transformer language model, which is called PaLM achieves breakthrough performance, outperforming the state-of-the-art on a suite of multi-step reasoning tasks, and outperforming average human performance on the recently released BIG-bench benchmark.","score":3},{"url":"https://www.semanticscholar.org/paper/1f87dc41bdf2c4c78e2dce9c5c8adfef5e25a70c","title":"Passport: Improving Automated Formal Verification Using Identifiers","venue":"ArXiv","year":2022,"referenceCount":73,"citationCount":4,"influentialCitationCount":0,"publicationDate":"21/04/2022","authors":"Alex Sanchez-Stern,E. First,Timothy Zhou,Zhanna Kaufman,Yuriy Brun,T. Ringer","id":"1f87dc41bdf2c4c78e2dce9c5c8adfef5e25a70c","summary":"Passport is a fully-automated proof-synthesis tool that encodes one additional aspect of that rich proof data: identifiers, suggesting that modeling identifiers can play a significant role in improving proof synthesis, leading to higher-quality software.","score":3},{"url":"https://www.semanticscholar.org/paper/6a250b904965732840a75b6a13e35ac15f5cce4d","title":"Compositional Generalization and Decomposition in Neural Program Synthesis","venue":"ArXiv","year":2022,"referenceCount":67,"citationCount":0,"influentialCitationCount":0,"publicationDate":"07/04/2022","authors":"Kensen Shi,Joey Hong,M. Zaheer,Pengcheng Yin,Charles Sutton","id":"6a250b904965732840a75b6a13e35ac15f5cce4d","summary":"A suite of generalization tasks, which measure different types of compositional generalization that are desirable for program synthesis and are particularly difﬁcult for current sequence to sequence models, are proposed.","score":3},{"url":"https://www.semanticscholar.org/paper/f7820b52e3cdff6625e6bd0430a8d48ca66cca3f","title":"Self-Programming Artificial Intelligence Using Code-Generating Language Models","venue":"","year":2022,"referenceCount":31,"citationCount":0,"influentialCitationCount":0,"publicationDate":"30/04/2022","authors":"Alex Sheng,Shankar Padmanabhan","id":"f7820b52e3cdff6625e6bd0430a8d48ca66cca3f","summary":"It is empirically show that a self-programming AI implemented using a code generation model can successfully modify its own source code to improve performance and program sub-models to perform auxiliary tasks.","score":3},{"url":"https://www.semanticscholar.org/paper/9a7d4c2f4309a2a38ea8e5b23c6d616fa0952d44","title":"Neural language models for network configuration: Opportunities and reality check","venue":"Computer Communications","year":2022,"referenceCount":63,"citationCount":4,"influentialCitationCount":0,"publicationDate":"03/05/2022","authors":"Zied Ben-Houidi,Dario Rossi","id":"9a7d4c2f4309a2a38ea8e5b23c6d616fa0952d44","summary":"Recent advances in deep learning applied to programming languages are surveyed, for the purpose of code veriﬁcation, synthesis and translation: in particularly, their training requirements and expected performance are reviewed, and qualitatively assess whether similar techniques can bene⬁t corresponding use-cases in networking.","score":3},{"url":"https://www.semanticscholar.org/paper/0efa0441da820b1905572666ba1974a06a9663fb","title":"NaturalProver: Grounded Mathematical Proof Generation with Language Models","venue":"ArXiv","year":2022,"referenceCount":53,"citationCount":6,"influentialCitationCount":0,"publicationDate":"25/05/2022","authors":"S. Welleck,Jiacheng Liu,Ximing Lu,Hannaneh Hajishirzi,Yejin Choi","id":"0efa0441da820b1905572666ba1974a06a9663fb","summary":"N ATURAL P ROVER is capable of proving some theorems that require short (2-6 step) proofs, and providing next-step suggestions that are rated as correct and useful over 40% of the time, which is to the authors' knowledge the first demonstration of these capabilities using neural language models.","score":3},{"url":"https://www.semanticscholar.org/paper/0d08ffccc982781e310bb184397bbe64b9aef157","title":"Automatic Generation of Programming Exercises and Code Explanations Using Large Language Models","venue":"International Computing Education Research Workshop","year":2022,"referenceCount":99,"citationCount":19,"influentialCitationCount":1,"publicationDate":"03/06/2022","authors":"Sami Sarsa,Paul Denny,Arto Hellas,Juho Leinonen","id":"0d08ffccc982781e310bb184397bbe64b9aef157","summary":"The analysis suggests that there is significant value in massive generative machine learning models as a tool for instructors, although there remains a need for some oversight to ensure the quality of the generated content before it is delivered to students.","score":3},{"url":"https://www.semanticscholar.org/paper/2edc8efcda27c944a46f367acf6a5280b8f65525","title":"FixEval: Execution-based Evaluation of Program Fixes for Competitive Programming Problems","venue":"ArXiv","year":2022,"referenceCount":56,"citationCount":0,"influentialCitationCount":0,"publicationDate":2022,"authors":"Md. Mahim Anjum Haque,W. Ahmad,Ismini Lourentzou,Chris Brown","id":"2edc8efcda27c944a46f367acf6a5280b8f65525","summary":"This work introduces F IX E VAL, a benchmark comprising of buggy code submissions to competitive programming problems and their respective ﬁxes, and believes it provides a step towards real-world automatic bugﬁxing and model-generated code evaluation.","score":3},{"url":"https://www.semanticscholar.org/paper/ab0e3d3e4d42369de5933a3b4c237780b41c0d77","title":"Solving Quantitative Reasoning Problems with Language Models","venue":"ArXiv","year":2022,"referenceCount":51,"citationCount":77,"influentialCitationCount":14,"publicationDate":"29/06/2022","authors":"Aitor Lewkowycz,Anders Andreassen,David Dohan,Ethan Dyer,H. Michalewski,V. Ramasesh,Ambrose Slone,Cem Anil,Imanol Schlag,Theo Gutman-Solo,Yuhuai Wu,Behnam Neyshabur,Guy Gur-Ari,Vedant Misra","id":"ab0e3d3e4d42369de5933a3b4c237780b41c0d77","summary":"","score":3},{"url":"https://www.semanticscholar.org/paper/99f85119f113b5498517928eff74a904b69e37b7","title":"CCTEST: Testing and Repairing Code Completion Systems","venue":"ArXiv","year":2022,"referenceCount":81,"citationCount":1,"influentialCitationCount":0,"publicationDate":"17/08/2022","authors":"Zongjie Li,Chaozheng Wang,Zhibo Liu,Haoxuan Wang,Shuai Wang,Cuiyun Gao","id":"99f85119f113b5498517928eff74a904b69e37b7","summary":"This research proposes CCT EST, a framework to test and repair code completion systems in black-box settings, which features a set of novel mutation strategies, namely program structure-consistent (PSC) mutations, to generate mutated code completion inputs.","score":3},{"url":"https://www.semanticscholar.org/paper/95fa2b27ab7eb84738441ee16da97323538938f9","title":"I Speak, You Verify: Toward Trustworthy Neural Program Synthesis","venue":"ArXiv","year":2022,"referenceCount":34,"citationCount":0,"influentialCitationCount":0,"publicationDate":"29/09/2022","authors":"Darren Key,Wen-Ding Li,Kevin Ellis","id":"95fa2b27ab7eb84738441ee16da97323538938f9","summary":"An approach for improving the trustworthiness and overall accuracy of program synthesizers based on large language models for source code by analyzing the agreement between programs and predicates to judge both which program is most likely to be correct and whether the language model is able to solve the programming problem in the first place.","score":3},{"url":"https://www.semanticscholar.org/paper/0b8772b7790c69f40897b5eb7f8fd57f24138f3d","title":"ContraGen: Effective Contrastive Learning For Causal Language Model","venue":"ArXiv","year":2022,"referenceCount":66,"citationCount":0,"influentialCitationCount":0,"publicationDate":"03/10/2022","authors":"Nihal Jain,Dejiao Zhang,Wasi Uddin Ahmad,Zijian Wang,Feng Nan,Xiaopeng Li,M. Tan,Ramesh Nallapati,Baishakhi Ray,Parminder Bhatia,Xiaofei Ma,Bing Xiang","id":"0b8772b7790c69f40897b5eb7f8fd57f24138f3d","summary":"It is shown that C ONTRA G EN can effectively enhance both uniformity and discrimination of the representations and lead to the desired improvement on various language understanding tasks where discriminative representations are crucial for attaining good performance.","score":3},{"url":"https://www.semanticscholar.org/paper/0c78a473e33a81246d5c0fbbda7e7de168814c18","title":"FlexType: A Plug-and-Play Framework for Type Inference Models","venue":"International Conference on Automated Software Engineering","year":2022,"referenceCount":39,"citationCount":0,"influentialCitationCount":0,"publicationDate":"10/10/2022","authors":"Sivani Voruganti,Kevin Jesse,Prem Devanbu","id":"0c78a473e33a81246d5c0fbbda7e7de168814c18","summary":"This work introduces FlexType, an IDE extension that can be used on both JavaScript and TypeScript to infer types in an interactive or automatic fashion and believes the interactive Visual Studio Code extension is inherently useful in both TypeScript and JavaScript especially when resolving types is taxing for the developer.","score":3},{"url":"https://www.semanticscholar.org/paper/663a41c866d49ce052801fbc88947d39764cad29","title":"Challenging BIG-Bench Tasks and Whether Chain-of-Thought Can Solve Them","venue":"ArXiv","year":2022,"referenceCount":55,"citationCount":23,"influentialCitationCount":5,"publicationDate":"17/10/2022","authors":"Mirac Suzgun,Nathan Scales,Nathanael Scharli,Sebastian Gehrmann,Yi Tay,Hyung Won Chung,Aakanksha Chowdhery,Quoc V. Le,E. Chi,Denny Zhou,Jason Wei","id":"663a41c866d49ce052801fbc88947d39764cad29","summary":"It is found that applying chain-of-thought (CoT) prompting to BBH tasks enables PaLM to surpass the average human-rater performance on 10 of the 23 tasks, and Codex to surpass it on 17 of the23 tasks.","score":3},{"url":"https://www.semanticscholar.org/paper/8ffe7b7eeddbd4c22d642b0a48379d17e61c3bab","title":"Soft-Labeled Contrastive Pre-training for Function-level Code Representation","venue":"Conference on Empirical Methods in Natural Language Processing","year":2022,"referenceCount":42,"citationCount":2,"influentialCitationCount":0,"publicationDate":"18/10/2022","authors":"Xiaonan Li,Daya Guo,Yeyun Gong,Yun Lin,Yelong Shen,Xipeng Qiu,Daxin Jiang,Weizhu Chen,Nan Duan","id":"8ffe7b7eeddbd4c22d642b0a48379d17e61c3bab","summary":"This paper presents SCodeR, aoft-labeled contrastive pre-training framework with two positive sample construction methods to learn functional-level code representation and shows the effectiveness of the proposed pre- training method.","score":3},{"url":"https://www.semanticscholar.org/paper/4c2534f9b03ac2f3810c07abc398a11bcf47258e","title":"Transformers Learn Shortcuts to Automata","venue":"ArXiv","year":2022,"referenceCount":104,"citationCount":4,"influentialCitationCount":0,"publicationDate":"19/10/2022","authors":"Bingbin Liu,J. Ash,Surbhi Goel,A. Krishnamurthy,Cyril Zhang","id":"4c2534f9b03ac2f3810c07abc398a11bcf47258e","summary":"The theoretical results completely characterize shortcut solutions, whereby a shallow Transformer with only o(T ) layers can exactly replicate the computation of an automaton on an input sequence of length T .","score":3},{"url":"https://www.semanticscholar.org/paper/f031ba42cf82f106200bb03fbb91dd5671a59b9c","title":"Practical Program Repair in the Era of Large Pre-trained Language Models","venue":"ArXiv","year":2022,"referenceCount":69,"citationCount":4,"influentialCitationCount":0,"publicationDate":"25/10/2022","authors":"Chun Xia,Yuxiang Wei,Lingming Zhang","id":"f031ba42cf82f106200bb03fbb91dd5671a59b9c","summary":"This study demonstrates that directly applying state-of-the-art PLMs can already substantially outperform all existing APR techniques on all the authors' datasets and shows that PLM-based APR can be further substantially boosted via: increasing the sample size, and incorporating inﬁx template information.","score":3},{"url":"https://www.semanticscholar.org/paper/621009f1c30951b7c952c65c45ef0064a204e91e","title":"Early Experience with Transformer-Based Similarity Analysis for DataRaceBench","venue":"International Workshop on Software Correctness for HPC Applications","year":2022,"referenceCount":38,"citationCount":0,"influentialCitationCount":0,"publicationDate":"01/11/2022","authors":"Winson X. Chen,T. Vanderbruggen,Pei-Hung Lin,C. Liao,M. Emani","id":"621009f1c30951b7c952c65c45ef0064a204e91e","summary":"The challenges and the solutions when applying transformer-based similarity analysis to new source codes which are unseen by pre-trained transformers are explored, and comparative experiments of different variants of similarity analysis are used to comment on the strengths and limitations of the transformer- based approach and point out future research directions.","score":3},{"url":"https://www.semanticscholar.org/paper/2abed82162c47a0cc32cd62afcf46b0745541017","title":"Experiences from Using Code Explanations Generated by Large Language Models in a Web Software Development E-Book","venue":"ArXiv","year":2022,"referenceCount":45,"citationCount":3,"influentialCitationCount":0,"publicationDate":"04/11/2022","authors":"S. MacNeil,Andrew Tran,Arto Hellas,Joanne Kim,Sami Sarsa,Paul Denny,Seth Bernstein,Juho Leinonen","id":"2abed82162c47a0cc32cd62afcf46b0745541017","summary":"The preliminary results show that all varieties of explanations were viewed by students and that the majority of students perceived the code explanations as helpful to them, however, student engagement appeared to vary by code snippet complexity, explanation type, and code snippet length.","score":3},{"url":"https://www.semanticscholar.org/paper/327f1561b544b0a3b9d8d5d0e6d82c2a5911fca9","title":"BLOOM: A 176B-Parameter Open-Access Multilingual Language Model","venue":"ArXiv","year":2022,"referenceCount":157,"citationCount":53,"influentialCitationCount":9,"publicationDate":"09/11/2022","authors":"Teven Le Scao,Angela Fan,Christopher Akiki,Elizabeth-Jane Pavlick,Suzana Ili'c,Daniel Hesslow,Roman Castagn'e,A. Luccioni,Franccois Yvon,Matthias Gallé,J. Tow,Alexander M. Rush,Stella Rose Biderman,Albert Webson,Pawan Sasanka Ammanamanchi,Thomas Wang,Benoît Sagot,Niklas Muennighoff,Albert Villanova del Moral,Olatunji Ruwase,Rachel Bawden,Stas Bekman,Angelina McMillan-Major,Iz Beltagy,Huu Nguyen,Lucile Saulnier,Samson Tan,Pedro Ortiz Suarez,Victor Sanh,Hugo Laurenccon,Yacine Jernite,Julien Launay,Margaret Mitchell,Colin Raffel,Aaron Gokaslan,Adi Simhi,Aitor Soroa Etxabe,Alham Fikri Aji,Amit Alfassy,Anna Rogers,Ariel Kreisberg Nitzav,Canwen Xu,Chenghao Mou,Chris C. Emezue,Christopher Klamm,Colin Leong,Daniel Alexander van Strien,David Ifeoluwa Adelani,Dragomir R. Radev,Eduardo G. Ponferrada,Efrat Levkovizh,Ethan Kim,E. Natan,F. Toni,Gérard Dupont,Germán Kruszewski,Giada Pistilli,Hady ElSahar,Hamza Benyamina,Hieu Tran,Ian Yu,Idris Abdulmumin,Isaac Johnson,Itziar Gonzalez-Dios,Javier de la Rosa,Jenny Chim,Jesse Dodge,Jian Zhu,Jonathan Chang,Jorg Frohberg,Josephine L. Tobing,J. Bhattacharjee,Khalid Almubarak,Kimbo Chen,Kyle Lo,Leandro von Werra,Leon Weber,Long Phan,Loubna Ben Allal,Ludovic Tanguy,Manan Dey,M. Muñoz,Maraim Masoud,Mar'ia Grandury,Mario vSavsko,Max Huang,Maximin Coavoux,Mayank Singh,Mike Tian-Jian Jiang,Minh Chien Vu,M. A. Jauhar,Mustafa Ghaleb,Nishant Subramani,Nora Kassner,Nurulaqilla Khamis,Olivier Nguyen,Omar Espejel,Ona de Gibert,Paulo Villegas,Peter Henderson,Pierre Colombo,Priscilla Amuok,Quentin Lhoest,Rheza Harliman,Rishi Bommasani,R. L'opez,Rui Ribeiro,Salomey Osei,Sampo Pyysalo,Sebastian Nagel,Shamik Bose,Shamsuddeen Hassan Muhammad,Shanya Sharma,S. Longpre,Somaieh Nikpoor,Stanislav Silberberg,S. Pai,S. Zink,Tiago Timponi Torrent,Timo Schick,Tristan Thrush,V. Danchev,Vassilina Nikoulina,Veronika Laippala,Violette Lepercq,V. Prabhu,Zaid Alyafeai,Zeerak Talat,Arun Raja,Benjamin Heinzerling,Chenglei Si,Elizabeth Salesky,Sabrina J. Mielke,Wilson Y. Lee,Abheesht Sharma,Andrea Santilli,Antoine Chaffin,Arnaud Stiegler,Debajyoti Datta,Eliza Szczechla,Gunjan Chhablani,Han Wang,Harshit Pandey,Hendrik Strobelt,Jason Alan Fries,Jos Rozen,Leo Gao,Lintang Sutawika,M Saiful Bari,Maged S. Al-shaibani,Matteo Manica,Nihal V. Nayak,Ryan Teehan,Samuel Albanie,Sheng Shen,Srulik Ben-David,Stephen H. Bach,Taewoon Kim,T. Bers,Thibault Févry,Trishala Neeraj,Urmish Thakker,Vikas Raunak,Xiang Tang,Zheng Xin Yong,Zhiqing Sun,Shaked Brody,Y. Uri,Hadar Tojarieh,Adam Roberts,Hyung Won Chung,Jaesung Tae,Jason Phang,Ofir Press,Conglong Li,D. Narayanan,Hatim Bourfoune,J. Casper,Jeff Rasley,Max Ryabinin,Mayank Mishra,Minjia Zhang,M. Shoeybi,Myriam Peyrounette,N. Patry,Nouamane Tazi,Omar Sanseviero,Patrick von Platen,Pierre Cornette,Pierre Franccois Lavall'ee,R. Lacroix,Samyam Rajbhandari,Sanchit Gandhi,Shaden Smith,S. Requena,Suraj Patil,Tim Dettmers,Ahmed Baruwa,Amanpreet Singh,Anastasia Cheveleva,Anne-Laure Ligozat,Arjun Subramonian,Aur'elie N'ev'eol,Charles Lovering,Daniel H Garrette,D. Tunuguntla,Ehud Reiter,Ekaterina Taktasheva,E. Voloshina,Eli Bogdanov,Genta Indra Winata,Hailey Schoelkopf,Jan-Christoph Kalo,Jekaterina Novikova,J. Forde,Jordan Clive,Jungo Kasai,Ken Kawamura,Liam Hazan,Marine Carpuat,Miruna Clinciu,Najoung Kim,Newton Cheng,Oleg Serikov,Omer Antverg,Oskar van der Wal,Rui Zhang,Ruochen Zhang,Sebastian Gehrmann,S. Pais,Tatiana Shavrina,Thomas Scialom,Tian Yun,Tomasz Limisiewicz,Verena Rieser,Vitaly Protasov,V. Mikhailov,Yada Pruksachatkun,Yonatan Belinkov,Zachary Bamberger,Zdenvek Kasner,Alice Rueda,Amanda Pestana,A. Feizpour,Ammar Khan,Amy Faranak,A. Santos,A. Hevia,Antigona Unldreaj,Arash Aghagol,Arezoo Abdollahi,A. Tammour,Azadeh HajiHosseini,Bahareh Behroozi,B. Ajibade,B. Saxena,Carlos Muñoz Ferrandis,Danish Contractor,D. Lansky,Davis David,Douwe Kiela,D. A. Nguyen,Edward Tan,Emily Baylor,Ezinwanne Ozoani,Fatim T Mirza,Frankline Ononiwu,Habib Rezanejad,H.A. Jones,Indrani Bhattacharya,Irene Solaiman,Irina Sedenko,I. Nejadgholi,J. Passmore,Joshua Seltzer,Julio Bonis Sanz,Karen Fort,L. Dutra,Mairon Samagaio,Maraim Elbadri,M. Mieskes,Marissa Gerchick,Martha Akinlolu,Michael McKenna,Mike Qiu,M. Ghauri,Mykola Burynok,Nafis Abrar,Nazneen Rajani,Nour Elkott,N. Fahmy,O. Samuel,Ran An,R. Kromann,Ryan Hao,S. Alizadeh,Sarmad Shubber,Silas L. Wang,Sourav Roy,S. Viguier,Thanh-Cong Le,Tobi Oyebade,T. Le,Yoyo Yang,Z. Nguyen,Abhinav Ramesh Kashyap,Alfredo Palasciano,A. Callahan,Anima Shukla,Antonio Miranda-Escalada,A. Singh,Benjamin Beilharz,Bo Wang,C. Brito,Chenxi Zhou,Chirag Jain,Chuxin Xu,Clémentine Fourrier,Daniel Le'on Perin'an,Daniel Molano,Dian Yu,Enrique Manjavacas,Fabio Barth,Florian Fuhrimann,Gabriel Altay,Giyaseddin Bayrak,Gully A. Burns,Helena U. Vrabec,I. Bello,Isha Dash,J. Kang,John Giorgi,J. Golde,J. Posada,Karthi Sivaraman,Lokesh Bulchandani,Lu Liu,Luisa Shinzato,Madeleine Hahn de Bykhovetz,Maiko Takeuchi,Marc Pàmies,M. A. Castillo,Marianna Nezhurina,Mario Sanger,M. Samwald,Michael Cullan,Michael Weinberg,M. Wolf,Mina Mihaljcic,Minna Liu,M. Freidank,Myungsun Kang,Natasha Seelam,N. Dahlberg,N. Broad,N. Muellner,Pascale Fung,Patricia Haller,R. Chandrasekhar,R. Eisenberg,Robert Martin,Rodrigo L. Canalli,Rosaline Su,Ruisi Su,Samuel Cahyawijaya,Samuele Garda,Shlok S Deshmukh,Shubhanshu Mishra,Sid Kiblawi,Simon Ott,Sinee Sang-aroonsiri,Srishti Kumar,Stefan Schweter,S. Bharati,T. A. Laud,Th'eo Gigant,Tomoya Kainuma,Wojciech Kusa,Yanis Labrak,Yashasvi Bajaj,Y. Venkatraman,Yifan Xu,Ying Xu,Yun-chao Xu,Z. Tan,Zhongli Xie,Zifan Ye,M. Bras,Younes Belkada,Thomas Wolf","id":"327f1561b544b0a3b9d8d5d0e6d82c2a5911fca9","summary":"BLOOM is a 176B-parameter open-access language model designed and built thanks to a collaboration of hundreds of researchers and achieves competitive performance on a wide variety of benchmarks, with stronger results after undergoing multitask prompted finetuning.","score":3},{"url":"https://www.semanticscholar.org/paper/a4bdc300db297756f36bedee2859b62df8e268c2","title":"Follow the Wisdom of the Crowd: Effective Text Generation via Minimum Bayes Risk Decoding","venue":"ArXiv","year":2022,"referenceCount":83,"citationCount":3,"influentialCitationCount":0,"publicationDate":"14/11/2022","authors":"Mirac Suzgun,Luke Melas-Kyriazi,Dan Jurafsky","id":"a4bdc300db297756f36bedee2859b62df8e268c2","summary":"This work presents crowd sampling, a family of decoding methods based on Bayesian risk minimization, to ad-dress this diversity-quality trade-off in open-ended natural-language generation.","score":3},{"url":"https://www.semanticscholar.org/paper/20b60fb3993d2e9a5af04611f7bdf248e5a3a736","title":"Programming by Example and Text-to-Code Translation for Conversational Code Generation","venue":"ArXiv","year":2022,"referenceCount":21,"citationCount":0,"influentialCitationCount":0,"publicationDate":"21/11/2022","authors":"Eli Whitehouse,William Gerard,Yauhen Klimovich,Marc Franco-Salvador","id":"20b60fb3993d2e9a5af04611f7bdf248e5a3a736","summary":"Modular Programs for Text-guided Hierarchical Synthesis (MPaTHS), a method for integrating Programming by Example and text-to-code systems which uses an accessible natural language interface for synthesizing general programs, is proposed.","score":3},{"url":"https://www.semanticscholar.org/paper/30624a18720bf93a85dc3efe570df271a8c9f4c3","title":"Program Repair","venue":"ArXiv","year":2022,"referenceCount":105,"citationCount":2,"influentialCitationCount":0,"publicationDate":"23/11/2022","authors":"Xiang Gao,Yannic Noller,Abhik Roychoudhury","id":"30624a18720bf93a85dc3efe570df271a8c9f4c3","summary":"Keeping intermediate rules, instead of producing the most generalized rule by generalizing all concrete transformations, enables us to apply the most suitable rule to transform a given code.","score":3},{"url":"https://www.semanticscholar.org/paper/dca3bc28a7d404b28780a813ea7072eda809e6c0","title":"Programming Is Hard - Or at Least It Used to Be: Educational Opportunities And Challenges of AI Code Generation","venue":"ArXiv","year":2022,"referenceCount":49,"citationCount":0,"influentialCitationCount":0,"publicationDate":"02/12/2022","authors":"Brett A. Becker,Paul Denny,James Finnie-Ansley,Andrew Luxton-Reilly,J. Prather,E. Santos","id":"dca3bc28a7d404b28780a813ea7072eda809e6c0","summary":"It is argued that the community needs to act quickly in deciding what possible opportunities can and should be leveraged and how, while also working on how to overcome or otherwise mitigate the possible challenges.","score":3},{"url":"https://www.semanticscholar.org/paper/42630c03d3817b1153d245f20742ad4b30a80b75","title":"JEMMA: An Extensible Java Dataset for ML4Code Applications","venue":"ArXiv","year":2022,"referenceCount":93,"citationCount":0,"influentialCitationCount":0,"publicationDate":"18/12/2022","authors":"Anjan Karmakar,Miltiadis Allamanis,R. Robbes","id":"42630c03d3817b1153d245f20742ad4b30a80b75","summary":"JEMMA is introduced, which is a largescale, diverse, and high-quality dataset targeted at ML4Code applications, and becomes a workbench that researchers can use to experiment with novel representations and tasks operating on source code.","score":3},{"url":"https://www.semanticscholar.org/paper/bf5fbd690f24f873df86d1b0a06579cf42f7dc36","title":"Dialog2API: Task-Oriented Dialogue with API Description and Example Programs","venue":"ArXiv","year":2022,"referenceCount":32,"citationCount":0,"influentialCitationCount":0,"publicationDate":"20/12/2022","authors":"Raphael Shu,Elman Mansimov,Tamer Alkhouli,Nikolaos Pappas,Salvatore Romeo,Arshit Gupta,Saab Mansour,Yi Zhang,D. Roth","id":"bf5fbd690f24f873df86d1b0a06579cf42f7dc36","summary":"An approach tailored for the Dialog2API, where the dialogue states are represented by a stack of programs, with most recently mentioned program on the top of the stack, is proposed.","score":3},{"url":"https://www.semanticscholar.org/paper/c532f1df90925e5c69789f0cd99248d8a2a2e5bc","title":"My AI Wants to Know if This Will Be on the Exam: Testing OpenAI’s Codex on CS2 Programming Exercises","venue":"IFAC Symposium on Advances in Control Education","year":2023,"referenceCount":27,"citationCount":1,"influentialCitationCount":0,"publicationDate":"30/01/2023","authors":"James Finnie-Ansley,Paul Denny,Andrew Luxton-Reilly,E. Santos,J. Prather,Brett A. Becker","id":"c532f1df90925e5c69789f0cd99248d8a2a2e5bc","summary":"This paper presents results detailing how Codex performs on more advanced CS2 exam questions taken from past exams, and compares these results to those of students who took the same exams under normal conditions, demonstrating that Codex outscores most students.","score":3},{"url":"https://www.semanticscholar.org/paper/63396fceb84286b02796dc58e55c07ec1095c4dc","title":"FLAME: A small language model for spreadsheet formulas","venue":"ArXiv","year":2023,"referenceCount":46,"citationCount":0,"influentialCitationCount":0,"publicationDate":"31/01/2023","authors":"Harshit Joshi,Abishai Ebenezer,J. Cambronero,Sumit Gulwani,Aditya Kanade,Vu Le,Ivan Radivcek,Gust Verbruggen","id":"63396fceb84286b02796dc58e55c07ec1095c4dc","summary":"This work presents FLAME, a T5-based model trained on Excel formulas that leverages domain insights to achieve competitive performance with a substantially smaller model (60M parameters) and two orders of magnitude less training data.","score":3},{"url":"https://www.semanticscholar.org/paper/782f3d43b37790a83c98d5fd3ef142b296f20616","title":"CrossCodeBench: Benchmarking Cross-Task Generalization of Source Code Models","venue":"ArXiv","year":2023,"referenceCount":76,"citationCount":0,"influentialCitationCount":0,"publicationDate":"08/02/2023","authors":"Changan Niu,Chuanyi Li,Vincent Ng,Bin Luo","id":"782f3d43b37790a83c98d5fd3ef142b296f20616","summary":"A large-scale benchmark that includes 216 existing code-related tasks is proposed and it is demonstrated that the cross-task generalization of models can be largely improved by in-context learning methods such as few-shot learning and learning from task instructions, which shows the promising prospects of conducting cross- task learning research on this benchmark.","score":3},{"url":"https://www.semanticscholar.org/paper/b0335eb2b9a1684fc16ff79234f0b206b30da169","title":"A Study of Editor Features in a Creative Coding Classroom","venue":"ArXiv","year":2023,"referenceCount":107,"citationCount":0,"influentialCitationCount":0,"publicationDate":"30/01/2023","authors":"Andrew M. McNutt,Anton Outkine,Ravi Chugh","id":"b0335eb2b9a1684fc16ff79234f0b206b30da169","summary":"An experimental editor is implemented and used to teach a sequence of college and high-school creative coding courses to identify opportunities to improve creativity- and novice-focused IDEs and highlight ten-sions in their design.","score":2},{"url":"https://www.semanticscholar.org/paper/0bc2753f59e653de718b5c7a2a0a7e00d13778c7","title":"NL2CMD: An Updated Workflow for Natural Language to Bash Commands Translation","venue":"","year":2022,"referenceCount":77,"citationCount":0,"influentialCitationCount":0,"publicationDate":2022,"authors":"Quchen Fu,Zhongwei Teng,Marco Georgaklis,Jules White,Douglas,C. Schmidt","id":"0bc2753f59e653de718b5c7a2a0a7e00d13778c7","summary":"A state-of-the-art translation model used to generate Bash Commands from the corresponding English text is described and a new NL2CMD dataset is introduced that is automatically generated, involves minimal human intervention, and is over six times larger than prior datasets.","score":2},{"url":"https://www.semanticscholar.org/paper/d388b3cbc820975da21c57c9fb9cef2d9c6d08f0","title":"CodeRetriever: Large-scale Contrastive Pre-training for Code Search","venue":"","year":2022,"referenceCount":43,"citationCount":0,"influentialCitationCount":0,"publicationDate":2022,"authors":"Xiaonan Li,Yeyun Gong,Yelong Shen,Xipeng Qiu,Hang Zhang,Bolun Yao,Weizhen Qi,Daxin Jiang,Weizhu Chen,Nan Duan","id":"d388b3cbc820975da21c57c9fb9cef2d9c6d08f0","summary":"","score":2},{"url":"https://www.semanticscholar.org/paper/22df866f9605d27d1e5cca9b3ab721f33673e158","title":"ProgramTransformer: A tool for generating semantically equivalent transformed programs","venue":"Softw. Impacts","year":2022,"referenceCount":26,"citationCount":0,"influentialCitationCount":0,"publicationDate":"01/10/2022","authors":"Md Rafiqul Islam Rabin,Mohammad Amin Alipour","id":"22df866f9605d27d1e5cca9b3ab721f33673e158","summary":"","score":2},{"url":"https://www.semanticscholar.org/paper/862c0b672c9defded3111924310a07760cfa27ff","title":"Can NMT Understand Me? Towards Perturbation-based Evaluation of NMT Models for Code Generation","venue":"2022 IEEE/ACM 1st International Workshop on Natural Language-Based Software Engineering (NLBSE)","year":2022,"referenceCount":58,"citationCount":1,"influentialCitationCount":0,"publicationDate":"29/03/2022","authors":"Pietro Liguori,Cristina Improta,S. D. Vivo,R. Natella,B. Cukic,Domenico Cotroneo","id":"862c0b672c9defded3111924310a07760cfa27ff","summary":"This work identifies a set of perturbations and metrics tailored for the robustness assessment of NMT models, and presents a preliminary experimental evaluation, showing what type of perturbedations affect the model the most and deriving useful insights for future directions.","score":2},{"url":"https://www.semanticscholar.org/paper/24c5450d8fa785e5f85d9427d2d65cf66476ac3a","title":"Toward General Design Principles for Generative AI Applications","venue":"ArXiv","year":2023,"referenceCount":115,"citationCount":0,"influentialCitationCount":0,"publicationDate":"13/01/2023","authors":"Justin D. Weisz,Michael J. Muller,Jessica He,Stephanie Houde","id":"24c5450d8fa785e5f85d9427d2d65cf66476ac3a","summary":"","score":2},{"url":"https://www.semanticscholar.org/paper/2ad6b59ff14d6bec3f14d8b6480025bbebc50e46","title":"Optimal Neural Program Synthesis from Multimodal Specifications","venue":"Conference on Empirical Methods in Natural Language Processing","year":2020,"referenceCount":48,"citationCount":8,"influentialCitationCount":0,"publicationDate":"04/10/2020","authors":"Xi Ye,Qiaochu Chen,Işil Dillig,Greg Durrett","id":"2ad6b59ff14d6bec3f14d8b6480025bbebc50e46","summary":"The experimental results on a multimodal synthesis dataset show that the proposed optimal neural synthesis approach substantially outperforms prior state-of-the-art techniques in terms of accuracy %, finds model-optimal programs more frequently, and explores fewer states during search.","score":2},{"url":"https://www.semanticscholar.org/paper/6df98ac2300c6e9c232440147ba976b4f501ca67","title":"C ODEX HACKS H ACKER R ANK : B ENEFITS AND R ISKS OF L ARGE -S CALE S OURCE C ODE M ODELS","venue":"","year":2022,"referenceCount":56,"citationCount":0,"influentialCitationCount":0,"publicationDate":2022,"authors":"","id":"6df98ac2300c6e9c232440147ba976b4f501ca67","summary":"These studies evaluate Codex on code synthesis, similar to the approach, but their evaluation efforts remain limited to math problems.","score":2},{"url":"https://www.semanticscholar.org/paper/8bfc22de7fe66286ad9ae705d677246757fbf8a8","title":"Large Language Models Can Be Easily Distracted by Irrelevant Context","venue":"ArXiv","year":2023,"referenceCount":57,"citationCount":1,"influentialCitationCount":0,"publicationDate":"31/01/2023","authors":"Freda Shi,Xinyun Chen,Kanishka Misra,Nathan Scales,David Dohan,E. Chi,Nathanael Scharli,Denny Zhou","id":"8bfc22de7fe66286ad9ae705d677246757fbf8a8","summary":"This work investigates the distractibility of large language models, i.e., how the model problem-solving accuracy can be influenced by irrelevant context, and introduces Grade-School Math with Irrelevant Context (GSM-IC), an arithmetic reasoning dataset with irrelevant information in the problem description.","score":2},{"url":"https://www.semanticscholar.org/paper/cc80244d69c2c5bb7fe79fc6ca2561f2bed830ca","title":"Learning to Represent Programs with Heterogeneous Graphs","venue":"IEEE International Conference on Program Comprehension","year":2020,"referenceCount":70,"citationCount":15,"influentialCitationCount":3,"publicationDate":"28/09/2020","authors":"Wenhan Wang,Kechi Zhang,Ge Li,Zhi Jin","id":"cc80244d69c2c5bb7fe79fc6ca2561f2bed830ca","summary":"This paper proposes the heterogeneous program graph (HPG), which provides the types of the nodes and the edges explicitly, and employs the heterogeneity transformer (HGT) architecture to generate representations based on HPG, considering the type of information during processing.","score":2},{"url":"https://www.semanticscholar.org/paper/c125b0be73c8493ebc27beb572f6c1b21d6b4ae4","title":"Static Prediction of Runtime Errors by Learning to Execute Programs with External Resource Descriptions","venue":"ArXiv","year":2022,"referenceCount":36,"citationCount":2,"influentialCitationCount":0,"publicationDate":"07/03/2022","authors":"David Bieber,Rishab Goel,Daniel Zheng,H. Larochelle,Daniel Tarlow","id":"c125b0be73c8493ebc27beb572f6c1b21d6b4ae4","summary":"Surprisingly, it is shown that the model can also predict the location of the error, despite being trained only on labels indicating the presence/absence and kind of error.","score":2},{"url":"https://www.semanticscholar.org/paper/703f79763d534dbf9674132cec890f432dcc19ec","title":"A Survey of Deep Learning Models for Structural Code Understanding","venue":"ArXiv","year":2022,"referenceCount":180,"citationCount":1,"influentialCitationCount":0,"publicationDate":"03/05/2022","authors":"Ruoting Wu,Yu-xin Zhang,Qibiao Peng,Liang Chen,Zibin Zheng","id":"703f79763d534dbf9674132cec890f432dcc19ec","summary":"This survey presents a comprehensive overview of the structures formed from code data, categorizing the models for understanding code in recent years into two groups: sequence-based and graph-based models, and makes some suggestions for future research in structural code understanding field.","score":2},{"url":"https://www.semanticscholar.org/paper/713bd2971116098211ef06336dfbe91a69854404","title":"Probing Semantic Grounding in Language Models of Code with Representational Similarity Analysis","venue":"International Conference on Advanced Data Mining and Applications","year":2022,"referenceCount":18,"citationCount":0,"influentialCitationCount":0,"publicationDate":"15/07/2022","authors":"Shounak Naik,Rajaswa Patil,Swati Agarwal,V. Baths","id":"713bd2971116098211ef06336dfbe91a69854404","summary":"This paper probes representations from the CodeBERT model for semantic grounding by using the data from the IBM CodeNet dataset, and shows that using bimodalinputs over unimodal inputs gives better semantic grounding and sample eﬃciency during semantic ﬁne-tuning.","score":2},{"url":"https://www.semanticscholar.org/paper/27e3ca4fd7b8290a0e12ca4fd2b7ad5bcd5900f2","title":"Are Transformers All That Karel Needs?","venue":"","year":2021,"referenceCount":37,"citationCount":0,"influentialCitationCount":0,"publicationDate":2021,"authors":"Abhay Garg,Anand Sriraman,Kunal Pagarey,S. Karande","id":"27e3ca4fd7b8290a0e12ca4fd2b7ad5bcd5900f2","summary":"By changing the base architecture to a transformer based one, speciﬁcally GPT2, this work is able to apply simple execution guidance on top to achieve a generalization accurary of 89.64%, which is within 2.36 percentage points of the current state-of-the-art on Karel which uses ensembling.","score":2},{"url":"https://www.semanticscholar.org/paper/27d16a7f2ce8f2b787b34ff1f9b4fece079700c3","title":"Figuring out Figures: Using Textual References to Caption Scientific Figures","venue":"","year":2022,"referenceCount":25,"citationCount":0,"influentialCitationCount":0,"publicationDate":2022,"authors":"Stanley Cao,Kevin Liu","id":"27d16a7f2ce8f2b787b34ff1f9b4fece079700c3","summary":"This work uses the S CI C AP datasets curated by Hsu et al. and uses a variant of a CLIP+GPT-2 encoder-decoder model with cross-attention to generate captions conditioned on the image, and uses SciBERT to encode the textual metadata and uses this encoding alongside the figure embedding.","score":2},{"url":"https://www.semanticscholar.org/paper/317208b423d24d52ba04221cfb46956962364e22","title":"Extracting Meaningful Attention on Source Code: An Empirical Study of Developer and Neural Model Code Exploration","venue":"ArXiv","year":2022,"referenceCount":42,"citationCount":0,"influentialCitationCount":0,"publicationDate":"11/10/2022","authors":"Matteo Paltenghi,Rahul Pandita,Austin Z. Henley,Albert Ziegler","id":"317208b423d24d52ba04221cfb46956962364e22","summary":"This work empirically evaluates attention-agnostic heuris-tics and ten attention-based post processing approaches of the attention signal against the ground truth of developers exploring code, including the novel concept of follow-up attention which exhibits the highest agreement.","score":2},{"url":"https://www.semanticscholar.org/paper/e5993b3afe6384b5e6f90093989773ad1f868f71","title":"Towards Top-Down Deep Code Generation in Limited Scopes","venue":"ArXiv","year":2022,"referenceCount":38,"citationCount":0,"influentialCitationCount":0,"publicationDate":"04/09/2022","authors":"Jian Gu,H. Gall","id":"e5993b3afe6384b5e6f90093989773ad1f868f71","summary":"A semantic pyramid framework (SPF) is proposed as the approach, focusing on softwares of high modularity and low complexity, and introduces a three-layer semantic pyramid (SP) to associate text data and code data.","score":2},{"url":"https://www.semanticscholar.org/paper/bab6893ee48d168d27c227c3b0867f6d471fbea8","title":"Language Models are not Models of Language","venue":"ArXiv","year":2021,"referenceCount":58,"citationCount":0,"influentialCitationCount":0,"publicationDate":2021,"authors":"C. Veres","id":"bab6893ee48d168d27c227c3b0867f6d471fbea8","summary":"It is argued that the term language model is misleading because deep learning models are not theoretical models of language and proposed the adoption of corpus model instead, which better reflects the genesis and contents of the model.","score":2},{"url":"https://www.semanticscholar.org/paper/57d1e7ac339e783898f2c3b1af55737cbeee9fc5","title":"Measuring Mathematical Problem Solving With the MATH Dataset","venue":"NeurIPS Datasets and Benchmarks","year":2021,"referenceCount":65,"citationCount":91,"influentialCitationCount":20,"publicationDate":"05/03/2021","authors":"Dan Hendrycks,Collin Burns,Saurav Kadavath,Akul Arora,Steven Basart,Eric Tang,D. Song,J. Steinhardt","id":"57d1e7ac339e783898f2c3b1af55737cbeee9fc5","summary":"This work introduces MATH, a new dataset of 12, 500 challenging competition mathematics problems which can be used to teach models to generate answer derivations and explanations, and shows that accuracy remains relatively low, even with enormous Transformer models.","score":2},{"url":"https://www.semanticscholar.org/paper/98485ce6532d69f34a8ec67de6b09a39532bd221","title":"Communicating Natural Programs to Humans and Machines","venue":"ArXiv","year":2021,"referenceCount":87,"citationCount":8,"influentialCitationCount":0,"publicationDate":"15/06/2021","authors":"Samuel Acquaviva,Yewen Pu,Marta Kryven,Catherine Wong,Gabrielle Ecanow,Maxwell Nye,Theo Sechopoulos,Michael Henry Tessler,J. Tenenbaum","id":"98485ce6532d69f34a8ec67de6b09a39532bd221","summary":"LARC, the Language-complete ARC is presented, a collection of natural language descriptions by a group of human participants who instruct each other on how to solve ARC tasks using language alone, which contains successful instructions for 88% of the ARC tasks.","score":2},{"url":"https://www.semanticscholar.org/paper/58a6ca2ae28a618126f71a07262cb958a8c37904","title":"Latent Execution for Neural Program Synthesis","venue":"","year":2021,"referenceCount":60,"citationCount":2,"influentialCitationCount":0,"publicationDate":"29/06/2021","authors":"Xinyun Chen,D. Song,Yuandong Tian","id":"58a6ca2ae28a618126f71a07262cb958a8c37904","summary":"LaSynth learns the latent representation to approximate the execution of partially generated programs, even if they are incomplete in syntax, and significantly improves the performance of next token prediction over existing approaches, facilitating search.","score":2},{"url":"https://www.semanticscholar.org/paper/5436193122dff271796bca07df7cecb7a8d6dea6","title":"Natural language-guided programming","venue":"SIGPLAN symposium on New ideas, new paradigms, and reflections on programming and software","year":2021,"referenceCount":53,"citationCount":6,"influentialCitationCount":1,"publicationDate":"11/08/2021","authors":"Geert Heyman,Rafael Huysegems,P. Justen,Tom Van Cutsem","id":"5436193122dff271796bca07df7cecb7a8d6dea6","summary":"The key idea is to adapt code autocompletion tools such that they take into account not only the developer’s already-written code but also the intent of the task the developer is trying to achieve next, formulated in plain natural language.","score":2},{"url":"https://www.semanticscholar.org/paper/4885e616e85d420576196b2578525cbc501137ec","title":"Programming and execution models for next generation code intelligence systems (keynote)","venue":"ESEC/SIGSOFT FSE","year":2021,"referenceCount":22,"citationCount":0,"influentialCitationCount":0,"publicationDate":"18/08/2021","authors":"M. Mezini","id":"4885e616e85d420576196b2578525cbc501137ec","summary":"","score":2},{"url":"https://www.semanticscholar.org/paper/3f97c2067cde9377e50b3160bbd7982c94abd88a","title":"An Empirical Cybersecurity Evaluation of GitHub Copilot's Code Contributions","venue":"ArXiv","year":2021,"referenceCount":29,"citationCount":21,"influentialCitationCount":1,"publicationDate":2021,"authors":"H. Pearce,Baleegh Ahmad,Benjamin Tan,Brendan Dolan-Gavitt,R. Karri","id":"3f97c2067cde9377e50b3160bbd7982c94abd88a","summary":"This work systematically investigates the prevalence and conditions that can cause GitHub Copilot to recommend insecure code, and explores Copilot’s performance on three distinct code generation axes—examining how it performs given diversity of weaknesses, diversity of prompts, and diversity of domains.","score":2},{"url":"https://www.semanticscholar.org/paper/a176b0de62840f7118006277d94bbc1547162a4d","title":"Learning to Synthesize Programs as Interpretable and Generalizable Policies","venue":"Neural Information Processing Systems","year":2021,"referenceCount":131,"citationCount":15,"influentialCitationCount":2,"publicationDate":"31/08/2021","authors":"Dweep Trivedi,Jesse Zhang,Shao-Hua Sun,Joseph J. Lim","id":"a176b0de62840f7118006277d94bbc1547162a4d","summary":"Experimental results demonstrate that the proposed framework not only learns to reliably synthesize task-solving programs but also outperforms DRL and program synthesis baselines while producing interpretable and more generalizable policies.","score":2},{"url":"https://www.semanticscholar.org/paper/a8863de15a5ee8eed98107f423138a1a8f5a2ba8","title":"Multi-modal program inference: a marriage of pre-trained language models and component-based synthesis","venue":"Proc. ACM Program. Lang.","year":2021,"referenceCount":77,"citationCount":17,"influentialCitationCount":0,"publicationDate":"03/09/2021","authors":"Kia Rahmani,Mohammad Raza,Sumit Gulwani,Vu Le,Daniel Morris,Arjun Radhakrishna,Gustavo Soares,A. Tiwari","id":"a8863de15a5ee8eed98107f423138a1a8f5a2ba8","summary":"This work presents an approach that combines PTMs with component-based synthesis (CBS): PTMs are used to generate candidates programs from the natural language description of the task, which are then used to guide the CBS procedure to find the program that matches the precise examples-based specification.","score":2},{"url":"https://www.semanticscholar.org/paper/bc9598dc4ed0472d8b59b87ed3a139f8347d40ee","title":"Towards A Measure Of General Machine Intelligence","venue":"ArXiv","year":2021,"referenceCount":71,"citationCount":0,"influentialCitationCount":0,"publicationDate":"24/09/2021","authors":"Gautham Venkatasubramanian,Sibesh Kar,Abhimanyu Singh,Shubham Mishra,Dushyant Yadav,Shreyansh Chandak","id":"bc9598dc4ed0472d8b59b87ed3a139f8347d40ee","summary":"A common language of instruction is proposed, a programming language that allows the expression of programs in the form of directed acyclic graphs across a wide variety of real-world domains and computing platforms and evaluates the suitability of some well-known models as general intelligence systems by calculating their g-index scores.","score":2},{"url":"https://www.semanticscholar.org/paper/05c2e1ee203be217f100d2da05bdcc52004f00b6","title":"Unsolved Problems in ML Safety","venue":"ArXiv","year":2021,"referenceCount":217,"citationCount":62,"influentialCitationCount":5,"publicationDate":"28/09/2021","authors":"Dan Hendrycks,Nicholas Carlini,J. Schulman,J. Steinhardt","id":"05c2e1ee203be217f100d2da05bdcc52004f00b6","summary":"This work provides a new roadmap for ML Safety and presents four problems ready for research, namely withstanding hazards, identifying hazards, steering ML systems, and reducing deployment hazards.","score":2},{"url":"https://www.semanticscholar.org/paper/6c2d43e71e240e354b5790a38da78a291ceffe7c","title":"Learning to Superoptimize Real-world Programs","venue":"ArXiv","year":2021,"referenceCount":37,"citationCount":2,"influentialCitationCount":0,"publicationDate":"28/09/2021","authors":"Alex Shypula,P. Yin,Jeremy Lacomis,Claire Le Goues,E. Schwartz,Graham Neubig","id":"6c2d43e71e240e354b5790a38da78a291ceffe7c","summary":"A framework to learn to superoptimize real-world programs by using neural sequence-to-sequence models, and an approach to implement and outperforms a standard policy gradient learning approach on this dataset.","score":2},{"url":"https://www.semanticscholar.org/paper/dace03e57056d736f9e24937bdf486e894f8e866","title":"Is neural machine translation approach accurate enough for coding assistance?","venue":"BCNC@SPLASH","year":2021,"referenceCount":20,"citationCount":2,"influentialCitationCount":1,"publicationDate":"15/10/2021","authors":"Yuka Akinobu,Momoka Obara,Teruno Kajiura,Shiho Takano,Miyu Tamura,Mayu Tomioka,Kimio Kuramitsu","id":"dace03e57056d736f9e24937bdf486e894f8e866","summary":"A transcompiler-based back-translation, a data augmentation method that generates parallel corpora from numerous source code repositories and the resulting BLEU indicates that the proposed model is accurate enough to allow coding assistance in the future.","score":2},{"url":"https://www.semanticscholar.org/paper/21e8e76386aaaa00e0971af70ce84a8a544e1aa1","title":"Cascaded Fast and Slow Models for Efficient Semantic Code Search","venue":"ArXiv","year":2021,"referenceCount":24,"citationCount":4,"influentialCitationCount":0,"publicationDate":"15/10/2021","authors":"Akhilesh Deepak Gotmare,Junnan Li,Shafiq R. Joty,S. Hoi","id":"21e8e76386aaaa00e0971af70ce84a8a544e1aa1","summary":"An efficient and accurate semantic code search framework with cascaded fast and slow models, in which a fast transformer encoder model is learned to optimize a scalable index for fast retrieval followed by learning a slow classification-based re-ranking model to improve the performance of the top K results from the fast retrieval.","score":2},{"url":"https://www.semanticscholar.org/paper/570a6a5b8ec2827c3f33bb1b1bd027190a0d3e07","title":"Neural Program Generation Modulo Static Analysis","venue":"Neural Information Processing Systems","year":2021,"referenceCount":56,"citationCount":11,"influentialCitationCount":0,"publicationDate":"26/10/2021","authors":"Rohan Mukherjee,Yeming Wen,Dipak Chaudhari,T. Reps,Swarat Chaudhuri,C. Jermaine","id":"570a6a5b8ec2827c3f33bb1b1bd027190a0d3e07","summary":"The neurosymbolic method allows a deep generative model to symbolically compute, using calls to a static-analysis tool, long-distance semantic relationships in the code that it has already generated, and learns to generate programs conditioned on them.","score":2},{"url":"https://www.semanticscholar.org/paper/091fa84bdc07dcb22a34060c3996d8c58d71cd20","title":"Towards Neural Functional Program Evaluation","venue":"ArXiv","year":2021,"referenceCount":19,"citationCount":0,"influentialCitationCount":0,"publicationDate":"09/12/2021","authors":"Torsten Scholak,Jonathan Pilault,Joey Velez-Ginorio","id":"091fa84bdc07dcb22a34060c3996d8c58d71cd20","summary":"A new program generation mechanism is introduced that allows control over syntactic sugar for semantically equivalent programs in transformer-based language models for program evaluation of simple functional programming languages.","score":2},{"url":"https://www.semanticscholar.org/paper/75c8f2916a2067f7549cf58ea8c9061565eb1dab","title":"C ROSS B EAM : L EARNING TO S EARCH IN B OTTOM -U P P ROGRAM S YNTHESIS","venue":"","year":2022,"referenceCount":49,"citationCount":0,"influentialCitationCount":0,"publicationDate":2022,"authors":"H. Dai,Kevin Ellis,Charles Sutton","id":"75c8f2916a2067f7549cf58ea8c9061565eb1dab","summary":"This work uses a neural model to learn a hands-on search policy for bottom-up synthesis, instead of relying on a combinatorial search algorithm, and observes that CROSSBEAM learns to search efficiently, exploring much smaller portions of the program space compared to the state-of-the-art.","score":2},{"url":"https://www.semanticscholar.org/paper/9bf75110ea0923bbed49256b5491f1ec284019ec","title":"From BERT to GPT-3 Codex: Harnessing the Potential of Very Large Language Models for Data Management","venue":"Proceedings of the VLDB Endowment","year":2022,"referenceCount":35,"citationCount":0,"influentialCitationCount":0,"publicationDate":2022,"authors":"Immanuel Trummer","id":"9bf75110ea0923bbed49256b5491f1ec284019ec","summary":"The goal of the tutorial is to introduce database researchers to the latest generation of language models, and to their use cases in the domain of data management.","score":2},{"url":"https://www.semanticscholar.org/paper/ddab94478a7647ee136b1f6b5076417db3074d0f","title":"Machine Programming: Turning Data into Programmer Productivity","venue":"Proceedings of the VLDB Endowment","year":2022,"referenceCount":39,"citationCount":0,"influentialCitationCount":0,"publicationDate":2022,"authors":"A. Wasay,Nesime Tatbul,Justin Emile Gottschlich","id":"ddab94478a7647ee136b1f6b5076417db3074d0f","summary":"An introduction to machine programming is introduced introducing its three pillars: intention, invention, and adaptation, and an overview of the data ecosystem central to all machine programming systems is provided, highlighting challenges and novel opportunities relevant to the data systems community.","score":2},{"url":"https://www.semanticscholar.org/paper/2443179d421e1faf7474add557b45add554723c7","title":"Formal Premise Selection With Language Models","venue":"","year":2022,"referenceCount":34,"citationCount":0,"influentialCitationCount":0,"publicationDate":2022,"authors":"Szymon Tworkowski,Maciej Miku la,Tomasz Odrzygóźdź,K. Czechowski,Szymon Antoniak,Albert Qiaochu Jiang,Christian Szegedy,Lukasz Kucinski,Piotr Mi loś,Yuhuai Wu","id":"2443179d421e1faf7474add557b45add554723c7","summary":"This work provides a solution to the problem of selecting a useful premise to prove a new theorem by combining a premise selection model with a language model, and shows that this retrieval-augmented prover achieves significant improvements in proof rates compared to the language model alone.","score":2},{"url":"https://www.semanticscholar.org/paper/b98d6fe8f0ef02ec0d1bb2bcfb924c8f01feb7d4","title":"Convergent Representations of Computer Programs in Human and Artificial Neural Networks","venue":"","year":2022,"referenceCount":79,"citationCount":0,"influentialCitationCount":0,"publicationDate":2022,"authors":"Shashank Srikant,Benjamin Lipkin,Anna A. Ivanova,Evelina Fedorenko,Una-May O’Reilly","id":"b98d6fe8f0ef02ec0d1bb2bcfb924c8f01feb7d4","summary":"Analysis of brain recordings derived from functional magnetic resonance imaging studies of programmers comprehending Python code suggests at least two distinct neural mechanisms mediating computer program comprehension and evaluation, prompting the design of code model objectives that go beyond static language modeling.","score":2},{"url":"https://www.semanticscholar.org/paper/15ef2d1b88f54fa32a32927463a7116219b89529","title":"L EARNING TO S UPEROPTIMIZE R EAL - WORLD P ROGRAMS","venue":"","year":null,"referenceCount":0,"citationCount":0,"influentialCitationCount":0,"publicationDate":null,"authors":"","id":"15ef2d1b88f54fa32a32927463a7116219b89529","summary":"","score":2},{"url":"https://www.semanticscholar.org/paper/4797e960f8e7a2b47ae0d95c7071ef84fa5d4b5b","title":"Code Generation Using Machine Learning: A Systematic Review","venue":"IEEE Access","year":2022,"referenceCount":117,"citationCount":0,"influentialCitationCount":0,"publicationDate":2022,"authors":"Enrique Dehaerne,Bappaditya Dey,Sandip Halder,S. De Gendt,Wannes Meert","id":"4797e960f8e7a2b47ae0d95c7071ef84fa5d4b5b","summary":"This review provides a broad and detailed overview of studies for code generation using ML, and summarizes the applications, models, datasets, results, limitations, and future work of 37 publications.","score":2},{"url":"https://www.semanticscholar.org/paper/660ca9e15e19409903a0605f0584d0f263c35c67","title":"S YNCHROMESH : R ELIABLE C ODE G ENERATION FROM P RE - TRAINED L ANGUAGE M ODELS","venue":"","year":2022,"referenceCount":29,"citationCount":0,"influentialCitationCount":0,"publicationDate":2022,"authors":"Gabriel Poesia,A. Tiwari,Gustavo Soares,Christopher Meek","id":"660ca9e15e19409903a0605f0584d0f263c35c67","summary":"A framework for substantially improving the reliability of pre-trained models for code generation and observing substantial complementary gains from CSD and TST in prediction accuracy and in effectively preventing run-time errors is proposed.","score":2},{"url":"https://www.semanticscholar.org/paper/ba5d21b7c65c6598c7bd39a5d992308c205df374","title":"A S YSTEMATIC E VALUATION OF L ARGE L ANGUAGE M ODELS OF C ODE","venue":"","year":2022,"referenceCount":33,"citationCount":0,"influentialCitationCount":0,"publicationDate":2022,"authors":"Graham Neubig,V. Hellendoorn","id":"ba5d21b7c65c6598c7bd39a5d992308c205df374","summary":"It is found that existing open-source models do achieve close results in some programming languages, although targeted mainly for natural language modeling, and a new model, PolyCoder, is released that was trained on 249GB of code across 12 programming languages on a single machine.","score":2},{"url":"https://www.semanticscholar.org/paper/6e5eb6167d9766fbb4d14611d15cf95d7b75fb9d","title":"Asleep at the Keyboard? Assessing the Security of GitHub Copilot’s Code Contributions","venue":"IEEE Symposium on Security and Privacy","year":2021,"referenceCount":35,"citationCount":34,"influentialCitationCount":6,"publicationDate":"20/08/2021","authors":"H. Pearce,Baleegh Ahmad,Benjamin Tan,Brendan Dolan-Gavitt,R. Karri","id":"6e5eb6167d9766fbb4d14611d15cf95d7b75fb9d","summary":"This work systematically investigates the prevalence and conditions that can cause GitHub Copilot to recommend insecure code, and explores Copilot’s performance on three distinct code generation axes—examining how it performs given diversity of weaknesses, diversity of prompts, and diversity of domains.","score":2},{"url":"https://www.semanticscholar.org/paper/ff0b2681d7b05e16c46dfb71d980cc2f605907cd","title":"Finetuned Language Models Are Zero-Shot Learners","venue":"International Conference on Learning Representations","year":2021,"referenceCount":167,"citationCount":349,"influentialCitationCount":82,"publicationDate":"03/09/2021","authors":"Jason Wei,Maarten Bosma,Vincent Zhao,Kelvin Guu,A. Yu,Brian Lester,Nan Du,Andrew M. Dai,Quoc V. Le","id":"ff0b2681d7b05e16c46dfb71d980cc2f605907cd","summary":"It is shown that instruction tuning —ﬁnetuning language models on a collection of datasets described via instructions—substantially improves zero-shot performance on unseen tasks and outperforms few-shot GPT-3 by a large margin on ANLI, RTE, BoolQ, AI2-ARC, OpenbookQA, and StoryCloze.","score":2},{"url":"https://www.semanticscholar.org/paper/6e8f8e2d2c73c91d1c9198eb802f1c64b860ea4a","title":"Few-Shot Semantic Parsing with Language Models Trained on Code","venue":"North American Chapter of the Association for Computational Linguistics","year":2021,"referenceCount":18,"citationCount":19,"influentialCitationCount":3,"publicationDate":"16/12/2021","authors":"Richard Shin,Benjamin Van Durme","id":"6e8f8e2d2c73c91d1c9198eb802f1c64b860ea4a","summary":"This paper evaluates OpenAI Codex on Overnight and SMCalFlow and finds that unlike GPT-3, Codex performs similarly when targeting meaning representations directly, perhaps because meaning representations are structured similar to code in these datasets.","score":2},{"url":"https://www.semanticscholar.org/paper/53c0abe83fe9b4fdaf2208295d8504fcf5241694","title":"UnifiedSKG: Unifying and Multi-Tasking Structured Knowledge Grounding with Text-to-Text Language Models","venue":"Conference on Empirical Methods in Natural Language Processing","year":2022,"referenceCount":118,"citationCount":90,"influentialCitationCount":12,"publicationDate":"16/01/2022","authors":"Tianbao Xie,Chen Henry Wu,Peng Shi,Ruiqi Zhong,Torsten Scholak,Michihiro Yasunaga,Chien-Sheng Wu,Ming Zhong,Pengcheng Yin,Sida I. Wang,Victor Zhong,Bailin Wang,Chengzu Li,Connor Boyle,Ansong Ni,Ziyu Yao,Dragomir R. Radev,Caiming Xiong,Lingpeng Kong,Rui Zhang,Noah A. Smith,Luke Zettlemoyer,Tao Yu","id":"53c0abe83fe9b4fdaf2208295d8504fcf5241694","summary":"The UnifiedSKG framework is proposed, which unifies 21 SKG tasks into a text-to-text format, aiming to promote systematic SKG research, instead of being exclusive to a single task, domain, or dataset.","score":2},{"url":"https://www.semanticscholar.org/paper/92a8f7f09f3705cb5a6009a42220a6f01ea084e8","title":"Language Models as Zero-Shot Planners: Extracting Actionable Knowledge for Embodied Agents","venue":"International Conference on Machine Learning","year":2022,"referenceCount":55,"citationCount":92,"influentialCitationCount":13,"publicationDate":"18/01/2022","authors":"Wenlong Huang,P. Abbeel,Deepak Pathak,Igor Mordatch","id":"92a8f7f09f3705cb5a6009a42220a6f01ea084e8","summary":"This paper investigates the possibility of grounding high-level tasks, expressed in natural language, to a chosen set of actionable steps and proposes a procedure that conditions on existing demonstrations and semantically translates the plans to admissible actions.","score":2},{"url":"https://www.semanticscholar.org/paper/b62d63580b81a2cbb20c3c1593dd62d118e4cb07","title":"Synchromesh: Reliable code generation from pre-trained language models","venue":"International Conference on Learning Representations","year":2022,"referenceCount":31,"citationCount":32,"influentialCitationCount":4,"publicationDate":"26/01/2022","authors":"Gabriel Poesia,Oleksandr Polozov,Vu Le,A. Tiwari,Gustavo Soares,Christopher Meek,Sumit Gulwani","id":"b62d63580b81a2cbb20c3c1593dd62d118e4cb07","summary":"A framework for substantially improving the reliability of pre-trained models for code generation and observing substantial complementary gains from CSD and TST in prediction accuracy and in effectively preventing run-time errors is proposed.","score":2},{"url":"https://www.semanticscholar.org/paper/7428f9b16a82839e2cb6e6c7a77c1ffeab898813","title":"HEAT: Hyperedge Attention Networks","venue":"ArXiv","year":2022,"referenceCount":39,"citationCount":3,"influentialCitationCount":0,"publicationDate":"28/01/2022","authors":"Dobrik Georgiev,Marc Brockschmidt,Miltiadis Allamanis","id":"7428f9b16a82839e2cb6e6c7a77c1ffeab898813","summary":"This work presents HEAT, a neural model capable of representing typed and qualified hypergraphs, where each hyperedge explicitly qualifies how participating nodes con-tribute is treated, which can be viewed as a generalization of both message passing neural networks and Transformers.","score":2},{"url":"https://www.semanticscholar.org/paper/1b6e810ce0afd0dd093f789d2b2742d047e316d5","title":"Chain of Thought Prompting Elicits Reasoning in Large Language Models","venue":"ArXiv","year":2022,"referenceCount":103,"citationCount":338,"influentialCitationCount":92,"publicationDate":"28/01/2022","authors":"Jason Wei,Xuezhi Wang,Dale Schuurmans,Maarten Bosma,E. Chi,Quoc Le,Denny Zhou","id":"1b6e810ce0afd0dd093f789d2b2742d047e316d5","summary":"Experiments on three large language models show that chain-of-thought prompting improves performance on a range of arithmetic, commonsense, and symbolic reasoning tasks.","score":2},{"url":"https://www.semanticscholar.org/paper/763792c655e591c5d61f67d7ac9cbecbcb5f4508","title":"Pop Quiz! Can a Large Language Model Help With Reverse Engineering?","venue":"ArXiv","year":2022,"referenceCount":27,"citationCount":4,"influentialCitationCount":0,"publicationDate":"02/02/2022","authors":"H. Pearce,B. Tan,P. Krishnamurthy,F. Khorrami,R. Karri,Brendan Dolan-Gavitt","id":"763792c655e591c5d61f67d7ac9cbecbcb5f4508","summary":"An extensive quantitative analysis of the measured performance of the language model on a set of program purpose identification and information extraction tasks shows that LLMs are not yet ready for zero-shot reverse engineering.","score":2},{"url":"https://www.semanticscholar.org/paper/9ac5e1ffa8f837671a89354d4e298b1adeb08d79","title":"Enabling Automatic Repair of Source Code Vulnerabilities Using Data-Driven Methods","venue":"2022 IEEE/ACM 44th International Conference on Software Engineering: Companion Proceedings (ICSE-Companion)","year":2022,"referenceCount":39,"citationCount":0,"influentialCitationCount":0,"publicationDate":"07/02/2022","authors":"Anastasiia Grishina","id":"9ac5e1ffa8f837671a89354d4e298b1adeb08d79","summary":"This work proposes ways to improve code representations for vulnerability repair from three perspectives: input data type, data-driven models, and downstream tasks.","score":2},{"url":"https://www.semanticscholar.org/paper/9cbc044e315cdefe9a255119037ac7c23e9abdd5","title":"Predictability and Surprise in Large Generative Models","venue":"Conference on Fairness, Accountability and Transparency","year":2022,"referenceCount":92,"citationCount":27,"influentialCitationCount":2,"publicationDate":"15/02/2022","authors":"Deep Ganguli,Danny Hernandez,Liane Lovitt,Nova DasSarma,T. Henighan,Andy Jones,Nicholas Joseph,John Kernion,Benjamin Mann,Amanda Askell,Yuntao Bai,Anna Chen,Tom Conerly,Dawn Drain,Nelson Elhage,Sheer El Showk,Stanislav Fort,Zac Hatfield-Dodds,Scott Johnston,S. Kravec,Neel Nanda,Kamal Ndousse,Catherine Olsson,Daniela Amodei,Dario Amodei,Tom B. Brown,Jared Kaplan,Sam McCandlish,C. Olah,Jack Clark","id":"9cbc044e315cdefe9a255119037ac7c23e9abdd5","summary":"This paper highlights a counterintuitive property of large-scale generative models, which have a paradoxical combination of predictable loss on a broad training distribution, and unpredictable specific capabilities, inputs, and outputs, and analyzed how these conflicting properties combine to give model developers various motivations for deploying these models, and challenges that can hinder deployment.","score":2},{"url":"https://www.semanticscholar.org/paper/76f023c3a819fc58989a064a1b50825b11fce95d","title":"Capturing Failures of Large Language Models via Human Cognitive Biases","venue":"ArXiv","year":2022,"referenceCount":54,"citationCount":7,"influentialCitationCount":0,"publicationDate":"24/02/2022","authors":"Erik Jones,J. Steinhardt","id":"76f023c3a819fc58989a064a1b50825b11fce95d","summary":"The results indicate that experimental methodology from cognitive science can help characterize how machine learning systems behave, and draw inspiration from human cognitive biases as motivation to generate hypotheses for problems that models may have and develop experiments that elicit these problems.","score":2},{"url":"https://www.semanticscholar.org/paper/d26fe2a7a7cc940d8485488e97460b144dc7d69e","title":"From Natural Language to Simulations: Applying GPT-3 Codex to Automate Simulation Modeling of Logistics Systems","venue":"SSRN Electronic Journal","year":2022,"referenceCount":60,"citationCount":1,"influentialCitationCount":0,"publicationDate":"24/02/2022","authors":"I. Jackson,M. J. Sáenz","id":"d26fe2a7a7cc940d8485488e97460b144dc7d69e","summary":"This work demonstrated that the framework built on top of the GPT-3 Codex, a Transformer-based language model, could produce functionally valid simulations of queuing and inventory control systems given the verbal description.","score":2},{"url":"https://www.semanticscholar.org/paper/2b556fcf2ac634f03c1fb0ace5e602e829418e65","title":"ReACC: A Retrieval-Augmented Code Completion Framework","venue":"Annual Meeting of the Association for Computational Linguistics","year":2022,"referenceCount":70,"citationCount":15,"influentialCitationCount":2,"publicationDate":"15/03/2022","authors":"Shuai Lu,Nan Duan,Hojae Han,Daya Guo,Seung-won Hwang,Alexey Svyatkovskiy","id":"2b556fcf2ac634f03c1fb0ace5e602e829418e65","summary":"This work proposes a retrieval-augmented code completion framework, leveraging both lexical copying and referring to code with similar semantics by retrieval, and adopts a stage-wise training approach that combines a source code retriever and an auto-regressive language model for programming language.","score":2},{"url":"https://www.semanticscholar.org/paper/c347093e2dca530ce347526380b0b7aedf03a6b2","title":"CrossBeam: Learning to Search in Bottom-Up Program Synthesis","venue":"International Conference on Learning Representations","year":2022,"referenceCount":56,"citationCount":5,"influentialCitationCount":0,"publicationDate":"20/03/2022","authors":"Kensen Shi,H. Dai,Kevin Ellis,Charles Sutton","id":"c347093e2dca530ce347526380b0b7aedf03a6b2","summary":"This work uses a neural model to learn a hands-on search policy for bottom-up synthesis, instead of relying on a combinatorial search algorithm, and observes that CROSSBEAM learns to search efficiently, exploring much smaller portions of the program space compared to the state-of-the-art.","score":2},{"url":"https://www.semanticscholar.org/paper/fb5c11bbf63884f75d2da615fbf37a3bcfa2bd20","title":"Wordcraft: Story Writing With Large Language Models","venue":"International Conference on Intelligent User Interfaces","year":2022,"referenceCount":41,"citationCount":16,"influentialCitationCount":1,"publicationDate":"22/03/2022","authors":"Ann Yuan,Andy Coenen,Emily Reif,Daphne Ippolito","id":"fb5c11bbf63884f75d2da615fbf37a3bcfa2bd20","summary":"This work built Wordcraft, a text editor in which users collaborate with a generative language model to write a story, and shows that large language models enable novel co-writing experiences.","score":2},{"url":"https://www.semanticscholar.org/paper/237f5ca6fcccef2b77a2212b34fb06a1dbd09b72","title":"Evaluating Prompts Across Multiple Choice Tasks In a Zero-Shot Setting","venue":"ArXiv","year":2022,"referenceCount":47,"citationCount":0,"influentialCitationCount":0,"publicationDate":"29/03/2022","authors":"Gabriel Orlanski","id":"237f5ca6fcccef2b77a2212b34fb06a1dbd09b72","summary":"Collect and standardize prompts from a diverse range of tasks for use with tasks they were not designed for and evaluate these prompts across multiple choice datasets for a quantitative analysis of how certain attributes of a prompt affect performance.","score":2},{"url":"https://www.semanticscholar.org/paper/2ba7104f7b93d77940312664f3467b8f090d6d16","title":"On Distribution Shift in Learning-based Bug Detectors","venue":"International Conference on Machine Learning","year":2022,"referenceCount":49,"citationCount":5,"influentialCitationCount":1,"publicationDate":"21/04/2022","authors":"Jingxuan He,Luca Beurer-Kellner,Martin T. Vechev","id":"2ba7104f7b93d77940312664f3467b8f090d6d16","summary":"This work proposes to train a bug detector in two phases, first on a synthetic bug distribution to adapt the model to the bug detection domain, and then on a real bug distributionTo drive the model towards the real distribution, which leverage a multi-task hierarchy, focal loss, and contrastive learning to further boost performance.","score":2},{"url":"https://www.semanticscholar.org/paper/6050454e0446a3068617f73b0301453f3f67844d","title":"Stylette: Styling the Web with Natural Language","venue":"International Conference on Human Factors in Computing Systems","year":2022,"referenceCount":65,"citationCount":1,"influentialCitationCount":0,"publicationDate":"27/04/2022","authors":"Tae Soo Kim,Yoonseo Choi,D. Choi,Juho Kim","id":"6050454e0446a3068617f73b0301453f3f67844d","summary":"Stylette is a browser extension that enables users to change the style of websites by expressing goals in natural language, and shows that Stylette lowered the learning curve, helping participants perform styling changes 35% faster than those using developer tools.","score":2},{"url":"https://www.semanticscholar.org/paper/4054fc9e8776dc0324cfc215462d606eb75916c0","title":"Expectation vs. Experience: Evaluating the Usability of Code Generation Tools Powered by Large Language Models","venue":"CHI Extended Abstracts","year":2022,"referenceCount":53,"citationCount":38,"influentialCitationCount":5,"publicationDate":"27/04/2022","authors":"Ganesha Upadhyaya,Anastasia Reinhardt,Hridesh Rajan,Miryung Kim,Elena L. Glassman,B. Hartmann,Joseph Pinedo","id":"4054fc9e8776dc0324cfc215462d606eb75916c0","summary":"It was found that, while Copilot did not necessarily improve the task completion time or success rate, most participants preferred to use Copilot in daily programming tasks, since Copilot often provided a useful starting point and saved the effort of searching online.","score":2},{"url":"https://www.semanticscholar.org/paper/4bc040835fbff57ce6612306d794b8c6c8226086","title":"Discovering the Syntax and Strategies of Natural Language Programming with Generative Language Models","venue":"International Conference on Human Factors in Computing Systems","year":2022,"referenceCount":36,"citationCount":11,"influentialCitationCount":2,"publicationDate":"29/04/2022","authors":"Ellen Jiang,Edwin Toh,A. Molina,Kristen Olson,Claire Kayacik,Aaron Donsbach,Carrie J. Cai,Michael Terry","id":"4bc040835fbff57ce6612306d794b8c6c8226086","summary":"A natural language code synthesis tool, GenLine, backed by a large generative language model and a set of task-specific prompts that create or change code is presented, indicating that while naturallanguage code synthesis can sometimes provide a magical experience, participants still faced challenges.","score":2},{"url":"https://www.semanticscholar.org/paper/f8aa0cab09bc0668276e2cb5690bae47fa50d350","title":"An Initial Look at Self-Reprogramming Artificial Intelligence","venue":"ArXiv","year":2022,"referenceCount":14,"citationCount":0,"influentialCitationCount":0,"publicationDate":2022,"authors":"Alex Sheng","id":"f8aa0cab09bc0668276e2cb5690bae47fa50d350","summary":"This paper develops and experimentally validate the first fully self-reprogramming AI system with the ability to continuously modify and rewrite its own neural network source code.","score":2},{"url":"https://www.semanticscholar.org/paper/1f3a97d255a6d0b2d5535af75737ed43b1e96fc4","title":"Is GitHub Copilot a Substitute for Human Pair-programming? An Empirical Study","venue":"2022 IEEE/ACM 44th International Conference on Software Engineering: Companion Proceedings (ICSE-Companion)","year":2022,"referenceCount":11,"citationCount":10,"influentialCitationCount":0,"publicationDate":"01/05/2022","authors":"Saki Imai","id":"1f3a97d255a6d0b2d5535af75737ed43b1e96fc4","summary":"The results suggest that although Copilot increases productivity as measured by Lines of code added, the quality of code produced is inferior by having more lines of code deleted in the subsequent trial.","score":2},{"url":"https://www.semanticscholar.org/paper/cdfe9580f63070f311151444f9df32818cc858bf","title":"An Empirical Evaluation of GitHub Copilot's Code Suggestions","venue":"IEEE Working Conference on Mining Software Repositories","year":2022,"referenceCount":29,"citationCount":22,"influentialCitationCount":3,"publicationDate":"01/05/2022","authors":"N. Nguyen,Sarah Nadi","id":"cdfe9580f63070f311151444f9df32818cc858bf","summary":"Overall, Copilot's suggestions have low complexity with no notable differences between the programming languages and some potential Copilot shortcomings are found.","score":2},{"url":"https://www.semanticscholar.org/paper/5922f437512158970c417f4413bface021df5f78","title":"A Generalist Agent","venue":"ArXiv","year":2022,"referenceCount":102,"citationCount":133,"influentialCitationCount":19,"publicationDate":"12/05/2022","authors":"S. Reed,Konrad Zolna,Emilio Parisotto,Sergio Gomez Colmenarejo,Alexander Novikov,Gabriel Barth-Maron,Mai Gimenez,Yury Sulsky,Jackie Kay,J. T. Springenberg,Tom Eccles,Jake Bruce,Ali Razavi,Ashley D. Edwards,N. Heess,Yutian Chen,R. Hadsell,Oriol Vinyals,Mahyar Bordbar,N. D. Freitas","id":"5922f437512158970c417f4413bface021df5f78","summary":"","score":2},{"url":"https://www.semanticscholar.org/paper/c61ce808818308566124df2c8725c98d6bd38dc3","title":"A Precis of Language Models are not Models of Language","venue":"ArXiv","year":2022,"referenceCount":16,"citationCount":0,"influentialCitationCount":0,"publicationDate":"16/05/2022","authors":"C. Veres","id":"c61ce808818308566124df2c8725c98d6bd38dc3","summary":"It is shown that despite their many successes at performing linguistic tasks, Large Neural Language Models are ill suited as comprehensive models of natural language.","score":2},{"url":"https://www.semanticscholar.org/paper/58aacb967cc7fc25cfc9d51b7ad3e57ac00d119b","title":"Can Foundation Models Wrangle Your Data?","venue":"Proceedings of the VLDB Endowment","year":2022,"referenceCount":91,"citationCount":7,"influentialCitationCount":1,"publicationDate":"20/05/2022","authors":"A. Narayan,Ines Chami,Laurel J. Orr,Christopher R'e","id":"58aacb967cc7fc25cfc9d51b7ad3e57ac00d119b","summary":"It is found that large FMs generalize and achieve SoTA performance on data cleaning and integration tasks, even though they are not trained for these data tasks.","score":2},{"url":"https://www.semanticscholar.org/paper/636f854b1a3a983e6803eae0277179596cc2cb95","title":"Summarize and Generate to Back-translate: Unsupervised Translation of Programming Languages","venue":"ArXiv","year":2022,"referenceCount":53,"citationCount":1,"influentialCitationCount":0,"publicationDate":"23/05/2022","authors":"Wasi Uddin Ahmad,Saikat Chakraborty,Baishakhi Ray,Kai-Wei Chang","id":"636f854b1a3a983e6803eae0277179596cc2cb95","summary":"This work proposes a method for performing back-translation via code summarization and generation of natural language summaries given code snippets that performs competitively with state-of-the-art methods.","score":2},{"url":"https://www.semanticscholar.org/paper/f1b6b34b4440a77ba86493f7062e8974062508c5","title":"Applying genetic programming to PSB2: the next generation program synthesis benchmark suite","venue":"Genetic Programming and Evolvable Machines","year":2022,"referenceCount":62,"citationCount":1,"influentialCitationCount":0,"publicationDate":"01/06/2022","authors":"Thomas Helmuth,Peter Kelly","id":"f1b6b34b4440a77ba86493f7062e8974062508c5","summary":"25 new general program synthesis benchmark problems that make up PSB2, a new benchmark suite curated from a variety of sources, including programming katas and college courses are described.","score":2},{"url":"https://www.semanticscholar.org/paper/8c7fd98b6bc4f32772e76471afe8babc323f10d3","title":"CitySpec: An Intelligent Assistant System for Requirement Specification in Smart Cities","venue":"International Conference on Smart Computing","year":2022,"referenceCount":18,"citationCount":2,"influentialCitationCount":0,"publicationDate":"01/06/2022","authors":"Zirong Chen,Isaac Li,Haoxiang Zhang,S. Preum,J. Stankovic,Meiyi Ma","id":"8c7fd98b6bc4f32772e76471afe8babc323f10d3","summary":"This work builds CitySpec, the first intelligent assistant system for requirement specification in smart cities, and builds a translation model and enhance it through requirement synthesis and develops a novel online learning framework with validation under uncertainty.","score":2},{"url":"https://www.semanticscholar.org/paper/40edfa97cd02268fccff75eb9c693b11c1a968b2","title":"Formal Specifications from Natural Language","venue":"ArXiv","year":2022,"referenceCount":97,"citationCount":1,"influentialCitationCount":0,"publicationDate":"04/06/2022","authors":"Christopher Hahn,Frederik Schmitt,Julia J. Tillman,Niklas Metzger,Julian Siber,B. Finkbeiner","id":"40edfa97cd02268fccff75eb9c693b11c1a968b2","summary":"These experiments show that language models maintain their generalization capabilities from pre-trained knowledge of natural language to generalize, e.g., to new variable names or operator descriptions, and achieve competitive performance, and even outperform the state-of-the-art for translating into regular expressions.","score":2},{"url":"https://www.semanticscholar.org/paper/a64871352f8ac7f8aa226fda5cce70251a18a4fc","title":"Assessing Project-Level Fine-Tuning of ML4SE Models","venue":"ArXiv","year":2022,"referenceCount":39,"citationCount":0,"influentialCitationCount":0,"publicationDate":"07/06/2022","authors":"Egor Bogomolov,Sergey Zhuravlev,Egor Spirin,T. Bryksin","id":"a64871352f8ac7f8aa226fda5cce70251a18a4fc","summary":"It is shown that per-project fine-tuning can greatly improve the models’ quality as they capture the project’s domain and naming conventions.","score":2},{"url":"https://www.semanticscholar.org/paper/9aed848be4e9e401b0e61a2e5d60dbdafa0c6cc1","title":"A Dataset and Benchmark for Automatically Answering and Generating Machine Learning Final Exams","venue":"ArXiv","year":2022,"referenceCount":15,"citationCount":2,"influentialCitationCount":1,"publicationDate":"11/06/2022","authors":"Sarah Zhang,Reece Shuttleworth,Derek Austin,Yann Hicke,Leonard Tang,Sathwik Karnik,Darnell Granberry,Iddo Drori","id":"9aed848be4e9e401b0e61a2e5d60dbdafa0c6cc1","summary":"A student survey comparing the quality, appropriateness, andulty of machine- generated questions with human-written questions shows that across multiple aspects, machine-generated questions are indistinguishable from human-generated Questions and are suitable for ﬁnal exams.","score":2},{"url":"https://www.semanticscholar.org/paper/52ca0f589fdcde1c45fd6dfb1b72248d4ecaefc0","title":"Code Translation with Compiler Representations","venue":"ArXiv","year":2022,"referenceCount":43,"citationCount":2,"influentialCitationCount":0,"publicationDate":"30/06/2022","authors":"Marc Szafraniec,Baptiste Rozière,Hugh Leather Francois Charton,Patrick Labatut,Gabriel Synnaeve","id":"52ca0f589fdcde1c45fd6dfb1b72248d4ecaefc0","summary":"This paper proposes to augment code translation with IRs, speciﬁcally LLVM IR, with results on the C++, Java, Rust, and Go languages, and improves upon the state of the art for unsupervised code translation.","score":2},{"url":"https://www.semanticscholar.org/paper/53661ff6fdbfb8557c5b19895fad151792c62da7","title":"Few-shot training LLMs for project-specific code-summarization","venue":"International Conference on Automated Software Engineering","year":2022,"referenceCount":25,"citationCount":2,"influentialCitationCount":0,"publicationDate":"09/07/2022","authors":"Toufique Ahmed,Prem Devanbu","id":"53661ff6fdbfb8557c5b19895fad151792c62da7","summary":"This paper investigates the use few-shot training with the very large GPT (Generative Pre-trained Transformer) Codex model, and finds evidence suggesting that one can significantly surpass state-of-the-art models for code-summarization, leveraging project-specific training.","score":2},{"url":"https://www.semanticscholar.org/paper/f843233f76a5dff07bfa93a71a1cf13d8aa6a94a","title":"Exploring Length Generalization in Large Language Models","venue":"ArXiv","year":2022,"referenceCount":32,"citationCount":19,"influentialCitationCount":5,"publicationDate":"11/07/2022","authors":"Cem Anil,Yuhuai Wu,Anders Andreassen,Aitor Lewkowycz,Vedant Misra,V. Ramasesh,Ambrose Slone,Guy Gur-Ari,Ethan Dyer,Behnam Neyshabur","id":"f843233f76a5dff07bfa93a71a1cf13d8aa6a94a","summary":"It is shown that combining pretrained large language models’ in-context learning abilities with scratchpad prompting results in a dramatic improvement in length generalization, and is run to identify common sources of mistakes that highlight opportunities in equipping language models with the ability to generalize to longer problems.","score":2},{"url":"https://www.semanticscholar.org/paper/e37155d21818513bd40d64ee212099aac82bd6f8","title":"Less training, more repairing please: revisiting automated program repair via zero-shot learning","venue":"ESEC/SIGSOFT FSE","year":2022,"referenceCount":77,"citationCount":9,"influentialCitationCount":1,"publicationDate":"17/07/2022","authors":"Chun Xia,Lingming Zhang","id":"e37155d21818513bd40d64ee212099aac82bd6f8","summary":"This paper proposesAlphaRepair, the first cloze-style (or infilling-style) APR approach to directly leveraging large pre-trained code models for APR without any fine-tuning/retraining on historical bug fixes, and implements AlphaRepair as a practical multilingual APR tool based on the recent CodeBERT model.","score":2},{"url":"https://www.semanticscholar.org/paper/2f2750b48a6f958ff12cba90e99695123d1e2f47","title":"Using pre-trained language models to resolve textual and semantic merge conflicts (experience paper)","venue":"International Symposium on Software Testing and Analysis","year":2022,"referenceCount":29,"citationCount":2,"influentialCitationCount":0,"publicationDate":"18/07/2022","authors":"Jialu Zhang,Todd Mytkowicz,Mike Kaufman,R. Piskac,Shuvendu K. Lahiri","id":"2f2750b48a6f958ff12cba90e99695123d1e2f47","summary":"The feasibility of automatically repairing merge conflicts using k-shot learning with pre-trained large neural language models (LM) such as GPT-3 is explored, and LMs provide the state-of-the-art (SOTA) performance on semantic merge conflict resolution for Edge compared to earlier symbolic approaches.","score":2},{"url":"https://www.semanticscholar.org/paper/1e3ec5709b2ca43233c566cd77dbabbd6892bfa6","title":"Neurosymbolic repair for low-code formula languages","venue":"Proc. ACM Program. Lang.","year":2022,"referenceCount":69,"citationCount":3,"influentialCitationCount":0,"publicationDate":"24/07/2022","authors":"Rohan Bavishi,Harshit Joshi,Jos'e Pablo Cambronero S'anchez,Anna Fariha,Sumit Gulwani,Vu Le,Ivan Radicek,A. Tiwari","id":"1e3ec5709b2ca43233c566cd77dbabbd6892bfa6","summary":"LaMirage, a LAst-MIle RepAir-engine GEnerator that combines symbolic and neural techniques to perform last-mile repair in low-code formula languages, is developed and compared to state-of-the-art neural and symbolic approaches on 400 real Excel and Power Fx formulas, where LaMirage outperforms all baselines.","score":2},{"url":"https://www.semanticscholar.org/paper/ec4c8d99eb1c028c43af6d8bbf727392d351cb59","title":"Efficient Training of Language Models to Fill in the Middle","venue":"ArXiv","year":2022,"referenceCount":60,"citationCount":14,"influentialCitationCount":1,"publicationDate":"28/07/2022","authors":"Mohammad Bavarian,Heewoo Jun,N. Tezak,J. Schulman,C. McLeavey,Jerry Tworek,Mark Chen","id":"ec4c8d99eb1c028c43af6d8bbf727392d351cb59","summary":"There is extensive evidence that training models with a large fraction of data transformed in this way does not harm the original left-to-right generative capability, as measured by perplexity and sampling evaluations across a wide range of scales.","score":2},{"url":"https://www.semanticscholar.org/paper/def2e28863338cb20782eb2015a39d32df697ed6","title":"Learning to Improve Code Efficiency","venue":"ArXiv","year":2022,"referenceCount":35,"citationCount":1,"influentialCitationCount":0,"publicationDate":"09/08/2022","authors":"Bing Chen,Daniel Tarlow,Kevin Swersky,M. Maas,P. Heiber,Ashish Naik,Milad Hashemi,P. Ranganathan","id":"def2e28863338cb20782eb2015a39d32df697ed6","summary":"","score":2},{"url":"https://www.semanticscholar.org/paper/8c2d9d2aa891e3b53bbd9166c1b804a0741fc44a","title":"Finding Reusable Machine Learning Components to Build Programming Language Processing Pipelines","venue":"ArXiv","year":2022,"referenceCount":32,"citationCount":1,"influentialCitationCount":0,"publicationDate":"11/08/2022","authors":"Patrick Flynn,T. Vanderbruggen,C. Liao,Pei-Hung Lin,M. Emani,Xipeng Shen","id":"8c2d9d2aa891e3b53bbd9166c1b804a0741fc44a","summary":"To improve theability, accessibility, interoperability and reusability (FAIRness) of machine learning components, a set of representative papers in the domain of machineLearning-based PLP are collected and analyzed.","score":2},{"url":"https://www.semanticscholar.org/paper/9b61de7038290751377b64293baaf42f3e7cf441","title":"An Empirical Evaluation of Competitive Programming AI: A Case Study of AlphaCode","venue":"International Workshop on Software Clones","year":2022,"referenceCount":35,"citationCount":1,"influentialCitationCount":0,"publicationDate":"18/08/2022","authors":"Sila Lertbanjongngam,Bodin Chinthanet,T. Ishio,R. Kula,P. Leelaprute,Bundit Manaskasemsak,A. Rungsawang,Kenichi Matsumoto","id":"9b61de7038290751377b64293baaf42f3e7cf441","summary":"An empirical study to find code similarities and performance differences between AlphaCode-generated codes and human codes shows that the generated codes are similar to human codes and the generated code performs on par with or worse than the human code in terms of execution time and memory usage.","score":2},{"url":"https://www.semanticscholar.org/paper/befde3e07ce97f02f12fe92ab27e99f23ccd17aa","title":"Evaluating Progress in Automatic Chest X-Ray Radiology Report Generation","venue":"medRxiv","year":2022,"referenceCount":33,"citationCount":1,"influentialCitationCount":0,"publicationDate":"31/08/2022","authors":"F. Yu,M. Endo,R. Krishnan,I. Pan,A. Tsai,E. P. Reis,E. Fonseca,H. M. H. Lee,Z. H. Abad,A. Y. Ng,C. Langlotz,V. Venugopal,P. Rajpurkar","id":"befde3e07ce97f02f12fe92ab27e99f23ccd17aa","summary":"This study quantitatively examines the correlation between automated metrics and the scoring of reports by radiologists, and proposes a composite metric, called RadCliQ, that is able to rank the quality of reports similarly to radiologists and better than existing metrics.","score":2},{"url":"https://www.semanticscholar.org/paper/6b5d1e50894b1f28e4798cf20e9ffa88b9ec011a","title":"How to Prompt? Opportunities and Challenges of Zero- and Few-Shot Learning for Human-AI Interaction in Creative Applications of Generative Models","venue":"ArXiv","year":2022,"referenceCount":22,"citationCount":2,"influentialCitationCount":0,"publicationDate":"03/09/2022","authors":"Hai Dang,Lukas Mecke,Florian Lehmann,Sven Goller,D. Buschek","id":"6b5d1e50894b1f28e4798cf20e9ffa88b9ec011a","summary":"This work discusses the key opportunities and challenges for interactive creative applications that use prompting as a new paradigm for Human-AI interaction and proposes four design goals for user interfaces that support prompting.","score":2},{"url":"https://www.semanticscholar.org/paper/9360390b02b9a09ece9a2486055b17e18dc5d3f6","title":"Automatic Code Documentation Generation Using GPT-3","venue":"International Conference on Automated Software Engineering","year":2022,"referenceCount":60,"citationCount":0,"influentialCitationCount":0,"publicationDate":"06/09/2022","authors":"Junaed Younus Khan,Gias Uddin","id":"9360390b02b9a09ece9a2486055b17e18dc5d3f6","summary":"Codec is a GPT-3 based model pre-trained on both natural and programming languages that outperforms existing techniques even with basic settings like one-shot learning and achieves an overall BLEU score of 20.6 for six different programming languages.","score":2},{"url":"https://www.semanticscholar.org/paper/363758e9e296adc9391ed731e834809cf5d4c19b","title":"Are machine programming systems using right source-code measures to select code repositories?","venue":"MaLTeSQuE@ESEC/SIGSOFT FSE","year":2022,"referenceCount":32,"citationCount":1,"influentialCitationCount":0,"publicationDate":"24/09/2022","authors":"N. Hasabnis","id":"363758e9e296adc9391ed731e834809cf5d4c19b","summary":"A framework to rank open-source repositories on quality, maintainability, and popularity by leveraging existing research on this topic is developed and some correlation between the quality measures used in GitRank and ControlFlag's performance is revealed, suggesting that some of the measures used by GitRank are applicable to ControlFlag.","score":2},{"url":"https://www.semanticscholar.org/paper/cd6496bc404e18a24f634e3dded2ed1cdca03e0f","title":"Learning to Learn with Generative Models of Neural Network Checkpoints","venue":"ArXiv","year":2022,"referenceCount":77,"citationCount":8,"influentialCitationCount":0,"publicationDate":"26/09/2022","authors":"William S. Peebles,Ilija Radosavovic,Tim Brooks,Alexei A. Efros,J. Malik","id":"cd6496bc404e18a24f634e3dded2ed1cdca03e0f","summary":"This model is a conditional diffusion transformer that, given an initial input parameter vector and a prompted loss, error, or return, predicts the distribution over parameter updates that achieve the desired metric.","score":2},{"url":"https://www.semanticscholar.org/paper/55e3fe05598be7c3dd357d51166869f6571b824f","title":"Large Language Models are Pretty Good Zero-Shot Video Game Bug Detectors","venue":"ArXiv","year":2022,"referenceCount":51,"citationCount":0,"influentialCitationCount":0,"publicationDate":"05/10/2022","authors":"Mohammad Reza Taesiri,F. Macklon,Yihe Wang,Hengshuo Shen,C. Bezemer","id":"55e3fe05598be7c3dd357d51166869f6571b824f","summary":"This study explores the possibil-ity of leveraging the zero-shot capabilities of large language models for video game bug detection by formulating the bug detection problem as a question-answering task, and shows thatLarge language models can identify which event is buggy in a sequence of textual descriptions of events from a game.","score":2},{"url":"https://www.semanticscholar.org/paper/62f0db3a5ad5c795ec18fc7a6e7b01836809df57","title":"Language Models are Multilingual Chain-of-Thought Reasoners","venue":"ArXiv","year":2022,"referenceCount":50,"citationCount":17,"influentialCitationCount":1,"publicationDate":"06/10/2022","authors":"Freda Shi,Mirac Suzgun,Markus Freitag,Xuezhi Wang,Suraj Srivats,Soroush Vosoughi,Hyung Won Chung,Yi Tay,Sebastian Ruder,Denny Zhou,Dipanjan Das,Jason Wei","id":"62f0db3a5ad5c795ec18fc7a6e7b01836809df57","summary":"It is shown that the multilingual reasoning abilities of language models extend to other tasks such as commonsense reasoning and word-in-context semantic judgment, and that models have strikingly strong mult bilingual reasoning abilities, even in underrepresented languages such as Bengali and Swahili.","score":2},{"url":"https://www.semanticscholar.org/paper/259b7a01700c39d5669e88d1434873ea38a13528","title":"In-Context Policy Iteration","venue":"ArXiv","year":2022,"referenceCount":39,"citationCount":0,"influentialCitationCount":0,"publicationDate":"07/10/2022","authors":"Ethan Brooks,Logan Walls,Richard L. Lewis,Satinder Singh","id":"259b7a01700c39d5669e88d1434873ea38a13528","summary":"An algorithm, ICPI, that learns to perform RL tasks without expert demonstrations or gradients, and is presented as a policy-iteration method in which the prompt content is the entire locus of learning.","score":2},{"url":"https://www.semanticscholar.org/paper/5484d228bfc50efbac6e86677bc2ec2ee4ede1a6","title":"Scaling Instruction-Finetuned Language Models","venue":"ArXiv","year":2022,"referenceCount":104,"citationCount":36,"influentialCitationCount":10,"publicationDate":"20/10/2022","authors":"Hyung Won Chung,Le Hou,S. Longpre,Barret Zoph,Yi Tay,W. Fedus,Eric Li,Xuezhi Wang,M. Dehghani,Siddhartha Brahma,Albert Webson,S. Gu,Zhuyun Dai,Mirac Suzgun,Xinyun Chen,Aakanksha Chowdhery,Dasha Valter,Sharan Narang,Gaurav Mishra,A. Yu,Vincent Zhao,Yanping Huang,Andrew M. Dai,Hongkun Yu,Slav Petrov,E. Chi,J. Dean,Jacob Devlin,Adam Roberts,Denny Zhou,Quoc Le,Jason Wei","id":"5484d228bfc50efbac6e86677bc2ec2ee4ede1a6","summary":"This result shows that instruction and UL2 continued pre-training are complementary compute-eﬃcient methods to improve the performance of language models without increasing model scale.","score":2},{"url":"https://www.semanticscholar.org/paper/d26f616699a122e5455a13189e276002ee4cf923","title":"Draft, Sketch, and Prove: Guiding Formal Theorem Provers with Informal Proofs","venue":"ArXiv","year":2022,"referenceCount":40,"citationCount":2,"influentialCitationCount":0,"publicationDate":"21/10/2022","authors":"Albert Qiaochu Jiang,S. Welleck,J. Zhou,Wenda Li,Jiacheng Liu,M. Jamnik,Timothée Lacroix,Yuhuai Wu,Guillaume Lample","id":"d26f616699a122e5455a13189e276002ee4cf923","summary":"This work introduces Draft, Sketch, and Prove (DSP), a method that maps informal proofs to formal proof sketches, and uses the sketches to guide an automated prover by directing its search to easier sub-problems.","score":2},{"url":"https://www.semanticscholar.org/paper/472d87be3dc298102e058be55a814cc6d2085b39","title":"Towards Deceptive Defense in Software Security with Chaff Bugs","venue":"International Symposium on Recent Advances in Intrusion Detection","year":2022,"referenceCount":47,"citationCount":0,"influentialCitationCount":0,"publicationDate":"26/10/2022","authors":"Zhenghao Hu,Yu Hu,Brendan Dolan-Gavitt","id":"472d87be3dc298102e058be55a814cc6d2085b39","summary":"A new defensive technique called chaff bugs is proposed, which instead targets the bug discovery and exploit creation stages of this process, and can serve as an effective deterrent against both human attackers and automated bug-finding tools.","score":2},{"url":"https://www.semanticscholar.org/paper/ac3d7ae8b4acb137492d4a8d8bcff480b89fa000","title":"Programming Pedagogy and Assessment in the Era of AI/ML: A Position Paper","venue":"Compute","year":2022,"referenceCount":39,"citationCount":0,"influentialCitationCount":0,"publicationDate":"09/11/2022","authors":"A. Raman,Viraj Kumar","id":"ac3d7ae8b4acb137492d4a8d8bcff480b89fa000","summary":"This work surveys recent research on automated systems for writing code, and examines the components of the code-writing task using a six-step framework proposed in the literature, and identifies the impact of automated systems at each step.","score":2},{"url":"https://www.semanticscholar.org/paper/632ab7663e6d64578ceda1d1df9ec525b503bacb","title":"Steps towards prompt-based creation of virtual worlds","venue":"ArXiv","year":2022,"referenceCount":41,"citationCount":0,"influentialCitationCount":0,"publicationDate":"10/11/2022","authors":"Jasmine Roberts,Andrzej Banburski-Fahey,J. Lanier","id":"632ab7663e6d64578ceda1d1df9ec525b503bacb","summary":"This work shows that prompt-based methods can both accelerate in-VR level editing, as well as can become part of gameplay rather than just part of game development.","score":2},{"url":"https://www.semanticscholar.org/paper/048ed70192de0232086eb32a95ffb3be8d336c76","title":"Metaphors We Learn By","venue":"ArXiv","year":2022,"referenceCount":36,"citationCount":0,"influentialCitationCount":0,"publicationDate":"11/11/2022","authors":"R. Memisevic","id":"048ed70192de0232086eb32a95ffb3be8d336c76","summary":"This essay relates parameter sharing (“weight sharing”) to analogy making and the school of thought of cognitive metaphor, and discusses how recurrent and auto-regressive models can be thought of as extending analogy making from static features to dynamic skills and procedures.","score":2},{"url":"https://www.semanticscholar.org/paper/403028df4fe52786f1748f1c314b6eb2cf867197","title":"CLAWSAT: Towards Both Robust and Accurate Code Models","venue":"ArXiv","year":2022,"referenceCount":54,"citationCount":0,"influentialCitationCount":0,"publicationDate":"21/11/2022","authors":"Jinghan Jia,Shashank Srikant,Tamara Mitrovska,Chuang Gan,Shiyu Chang,Sijia Liu,Una-May O’Reilly","id":"403028df4fe52786f1748f1c314b6eb2cf867197","summary":"This is the first systematic study to explore and exploit the robustness and accuracy benefits of (multi-view) code obfuscations in code models and demonstrate the effectiveness of adversarial learning in CLAW.","score":2},{"url":"https://www.semanticscholar.org/paper/477d0b2abf07ee92732698f9aeb3c784f28ffa88","title":"On the Security Vulnerabilities of Text-to-SQL Models","venue":"ArXiv","year":2022,"referenceCount":71,"citationCount":0,"influentialCitationCount":0,"publicationDate":"28/11/2022","authors":"Xutan Peng,Yipeng Zhang,Jingfeng Yang,Mark Stevenson","id":"477d0b2abf07ee92732698f9aeb3c784f28ffa88","summary":"Vulnerability tests on Text-to-SQL, a technique that builds natural language interfaces for databases, showed that the Text- to-SQL modules of two commercial black boxes can be manipulated to produce malicious code, potentially leading to data breaches and Denial of Service.","score":2},{"url":"https://www.semanticscholar.org/paper/6d4a12ea469ff08634eeb24c47b265a7dca2fce2","title":"PADL: Language-Directed Physics-Based Character Control","venue":"ACM SIGGRAPH Conference and Exhibition on Computer Graphics and Interactive Techniques in Asia","year":2022,"referenceCount":71,"citationCount":0,"influentialCitationCount":0,"publicationDate":"29/11/2022","authors":"Jordan Juravsky,Yunrong Guo,S. Fidler,X. B. Peng","id":"6d4a12ea469ff08634eeb24c47b265a7dca2fce2","summary":"PADL, which leverages recent innovations in NLP in order to take steps towards developing language-directed controllers for physics-based character animation, is presented and it is shown that the framework can be applied to effectively direct a simulated humanoid character to perform a diverse array of complex motor skills.","score":2},{"url":"https://www.semanticscholar.org/paper/ea55ae4c82b45e3857f37406c94e9f642a2b3d84","title":"Genetic Programming with Local Scoring","venue":"ArXiv","year":2022,"referenceCount":9,"citationCount":0,"influentialCitationCount":0,"publicationDate":"30/11/2022","authors":"Max Vistrup","id":"ea55ae4c82b45e3857f37406c94e9f642a2b3d84","summary":"New techniques for synthesizing programs through se-quences of mutations, including a method of local scoring assigning a score to each expression in a program, and cyclic evolution in which programs evolve programs through phases of expansion and reduction are presented.","score":2},{"url":"https://www.semanticscholar.org/paper/4290a70025f29d7054c550c75ae6b24c38a79d12","title":"SE Factual Knowledge in Frozen Giant Code Model: A Study on FQN and its Retrieval","venue":"ArXiv","year":2022,"referenceCount":74,"citationCount":0,"influentialCitationCount":0,"publicationDate":"16/12/2022","authors":"Qing Huang,Dianshu Liao,Zhenchang Xing,Zhiqiang Yuan,Qinghua Lu,Xiwei Xu,Jiaxing Lu","id":"4290a70025f29d7054c550c75ae6b24c38a79d12","summary":"This work conducts the first systematic study on the SE factual knowledge in the state-of-the-art PCM CoPilot, focusing on APIs’ Fully Qualiﬁed Names (FQNs), the fundamental knowledge for effective code analysis, search and reuse.","score":2},{"url":"https://www.semanticscholar.org/paper/ae441f7305dc2cd58c708528b3ecee3501cc5c46","title":"Plansformer: Generating Symbolic Plans using Transformers","venue":"ArXiv","year":2022,"referenceCount":36,"citationCount":1,"influentialCitationCount":0,"publicationDate":"16/12/2022","authors":"Vishal Pallagani,Bharath Muppasani,K. Murugesan,F. Rossi,L. Horesh,Biplav Srivastava,F. Fabiano,Andrea Loreggia","id":"ae441f7305dc2cd58c708528b3ecee3501cc5c46","summary":"The use of LLMs for automated planning - a branch of AI concerned with the realization of action sequences (plans) to achieve a goal, typically executed by intelligent agents, autonomous robots, and unmanned vehicles are explored.","score":2},{"url":"https://www.semanticscholar.org/paper/3b8ccc7ec80b8775de603e248ac1ca2b919d6b70","title":"Chatbots in a Botnet World","venue":"ArXiv","year":2022,"referenceCount":29,"citationCount":2,"influentialCitationCount":0,"publicationDate":"18/12/2022","authors":"Forrest McKee,David Noever","id":"3b8ccc7ec80b8775de603e248ac1ca2b919d6b70","summary":"Questions-and-answer formats provide a novel experimental platform for investigating cybersecurity questions and illustrate cases that support the broad gain of functionality, including self-replication and self-modification, evasion, and strategic understanding of complex cybersecurity goals.","score":2},{"url":"https://www.semanticscholar.org/paper/6756fcd998caeb7b23702e08559e63710179334c","title":"Reasoning with Language Model Prompting: A Survey","venue":"ArXiv","year":2022,"referenceCount":150,"citationCount":5,"influentialCitationCount":0,"publicationDate":"19/12/2022","authors":"Shuofei Qiao,Yixin Ou,Ningyu Zhang,Xiang Chen,Yunzhi Yao,Shumin Deng,Chuanqi Tan,Fei Huang,Huajun Chen","id":"6756fcd998caeb7b23702e08559e63710179334c","summary":"This paper provides a comprehensive survey of cutting-edge research on reasoning with language model prompting and introduces research works with comparisons and summaries and provides systematic resources to help beginners.","score":2},{"url":"https://www.semanticscholar.org/paper/a8e0ba16346b72c3a04dd0b1da84bc5f28900174","title":"Using GitHub Copilot to Solve Simple Programming Problems","venue":"","year":2023,"referenceCount":15,"citationCount":1,"influentialCitationCount":1,"publicationDate":2023,"authors":"M. Wermelinger","id":"a8e0ba16346b72c3a04dd0b1da84bc5f28900174","summary":"Evaluating Copilot, a natural language machine learning model trained on billions of lines of code, and looking qualitatively at the generated suggestions, to understand the limitations of Copilot.","score":2},{"url":"https://www.semanticscholar.org/paper/490f1e8ff352bded30bcde01d5b4769d6c2d2dd5","title":"Adversarial Attacks on Neural Models of Code via Code Difference Reduction","venue":"ArXiv","year":2023,"referenceCount":48,"citationCount":0,"influentialCitationCount":0,"publicationDate":"06/01/2023","authors":"Zhao Tian,Junjie Chen,Zhi Jin","id":"490f1e8ff352bded30bcde01d5b4769d6c2d2dd5","summary":"This work proposes a novel adversarial attack technique, CODA, that uses the code differences between the target input and reference inputs to guide the generation of adversarial examples and considers both structure differences and identiﬁer differences to preserve the original semantics.","score":2},{"url":"https://www.semanticscholar.org/paper/468992bf970c37bd1fef58b78a6c2fcd8c018868","title":"Scaling Laws for Generative Mixed-Modal Language Models","venue":"ArXiv","year":2023,"referenceCount":41,"citationCount":1,"influentialCitationCount":0,"publicationDate":"10/01/2023","authors":"Armen Aghajanyan,L. Yu,Alexis Conneau,Wei-Ning Hsu,Karen Hambardzumyan,Susan Zhang,Stephen Roller,Naman Goyal,Omer Levy,Luke Zettlemoyer","id":"468992bf970c37bd1fef58b78a6c2fcd8c018868","summary":"New mixed-modal scaling laws that unify the contributions of individual modalities and the interactions between them are reported, and the optimal synergy and competition due to data and model size is explicitly model as an additive term to previous uni-modAL scaling laws.","score":2},{"url":"https://www.semanticscholar.org/paper/1f22de83d912176cb8857efa1c6d65b14d6a2f5c","title":"ChatGPT is not all you need. A State of the Art Review of large Generative AI models","venue":"ArXiv","year":2023,"referenceCount":34,"citationCount":5,"influentialCitationCount":0,"publicationDate":"11/01/2023","authors":"Roberto Gozalo-Brizuela,E.C. Garrido-Merchán","id":"1f22de83d912176cb8857efa1c6d65b14d6a2f5c","summary":"This work consists on an attempt to describe in a concise way the main models are sectors that aresector that are aﬀected by generative AI and to provide a taxonomy of the main generative models published recently.","score":2},{"url":"https://www.semanticscholar.org/paper/907a77639069bb7dd270f017068745706133cffc","title":"Inaccessible Neural Language Models Could Reinvigorate Linguistic Nativism","venue":"ArXiv","year":2023,"referenceCount":56,"citationCount":0,"influentialCitationCount":0,"publicationDate":"12/01/2023","authors":"Patrick Perrine","id":"907a77639069bb7dd270f017068745706133cffc","summary":"This work argues that this lack of accessibility could instill a nativist bias in researchers new to computational linguistics, and calls upon researchers to open source their LLM code wherever possible to allow both empircist and hybrid approaches to remain accessible.","score":2},{"url":"https://www.semanticscholar.org/paper/a20875e70a38cb053cd34e170038c4746f85dac9","title":"A Case Study in Engineering a Conversational Programming Assistant's Persona","venue":"ArXiv","year":2023,"referenceCount":22,"citationCount":0,"influentialCitationCount":0,"publicationDate":"13/01/2023","authors":"Steven I. Ross,Michael J. Muller,Fernando Martinez,Stephanie Houde,Justin D. Weisz","id":"a20875e70a38cb053cd34e170038c4746f85dac9","summary":"The Programmer’s Assistant is an experimental prototype software development environment that integrates a chatbot with a code editor that establishes a conversational interaction pattern, a set of conventions.","score":2},{"url":"https://www.semanticscholar.org/paper/074baf835aec44a100990178859b35451975f339","title":"Navigating Complexity in Software Engineering: A Prototype for Comparing GPT-n Solutions","venue":"ArXiv","year":2023,"referenceCount":27,"citationCount":0,"influentialCitationCount":0,"publicationDate":"28/01/2023","authors":"Christoph Treude","id":"074baf835aec44a100990178859b35451975f339","summary":"A work-in-progress prototype “GPTC OMPARE” is presented, which allows programmers to visually compare multiple source code solutions generated by GPT-n models for the same programming- related query by highlighting their similarities and differences.","score":2},{"url":"https://www.semanticscholar.org/paper/1d34b6cffe67077cdd4df41950b1195f09ae0cb8","title":"Hierarchical Programmatic Reinforcement Learning via Learning to Compose Programs","venue":"ArXiv","year":2023,"referenceCount":51,"citationCount":0,"influentialCitationCount":0,"publicationDate":"30/01/2023","authors":"Guanhui. Liu,En-Pei Hu,Pu-Jen Cheng,Hung-yi Lee,Shao-Hua Sun","id":"1d34b6cffe67077cdd4df41950b1195f09ae0cb8","summary":"This work proposes to learn a meta-policy that composes a series of programs sampled from the learned program embedding space that can produce program policies that describe out-of-distributionally complex behaviors and directly assign credits to programs that induce desired behaviors.","score":2},{"url":"https://www.semanticscholar.org/paper/861916af6428277a3ce2e18034e4b40dc6616eb9","title":"On the Robustness of Code Generation Techniques: An Empirical Study on GitHub Copilot","venue":"ArXiv","year":2023,"referenceCount":60,"citationCount":0,"influentialCitationCount":0,"publicationDate":"01/02/2023","authors":"A. Mastropaolo,L. Pascarella,Emanuela Guglielmi,Matteo Ciniselli,Simone Scalabrino,R. Oliveto,G. Bavota","id":"861916af6428277a3ce2e18034e4b40dc6616eb9","summary":"This paper presents an empirical study in which it is aimed at understanding whether different but semantically equivalent natural language descriptions result in the same recommended function, and investigates the extent to which predictions generated by Copilot changed.","score":2},{"url":"https://www.semanticscholar.org/paper/2af6a21a1b682ceb585165359d3605e89f4cf6b0","title":"Fixing Hardware Security Bugs with Large Language Models","venue":"ArXiv","year":2023,"referenceCount":47,"citationCount":0,"influentialCitationCount":0,"publicationDate":"02/02/2023","authors":"Baleegh Ahmad,Shailja Thakur,B. Tan,R. Karri,H. Pearce","id":"2af6a21a1b682ceb585165359d3605e89f4cf6b0","summary":"The results show that LLMs can repair hardware security bugs and the framework designed and implemented are an important step towards the ultimate goal of an automated end-to-end bug repair framework.","score":2},{"url":"https://www.semanticscholar.org/paper/d79e0cb459ba751e719889fbb9ae9398d35c37fb","title":"KNOD: Domain Knowledge Distilled Tree Decoder for Automated Program Repair","venue":"ArXiv","year":2023,"referenceCount":63,"citationCount":1,"influentialCitationCount":0,"publicationDate":"03/02/2023","authors":"Nan Jiang,Thibaud Lutellier,Yiling Lou,Lin Tan,Dan Goldwasser,Xiangyu Zhang","id":"d79e0cb459ba751e719889fbb9ae9398d35c37fb","summary":"KNOD is proposed, which incorporates domain knowledge to guide patch generation in a direct and comprehensive way and is evaluated on three widely-used benchmarks, outperforming all existing APR tools.","score":2},{"url":"https://www.semanticscholar.org/paper/fb243dfd1234b8f76dfda740a62402663da74085","title":"Exploring Data Augmentation for Code Generation Tasks","venue":"ArXiv","year":2023,"referenceCount":24,"citationCount":0,"influentialCitationCount":0,"publicationDate":"05/02/2023","authors":"Pinzhen Chen,Gerasimos Lampouras","id":"fb243dfd1234b8f76dfda740a62402663da74085","summary":"Focusing on data utilization for downstream tasks, this work proposes and adapt augmentation methods that yield consistent improvements in code translation and summarization by up to 6.9% and 7.5% respectively.","score":2},{"url":"https://www.semanticscholar.org/paper/8927db4ee890bf42608752bb840bc9d7db556da1","title":"ChatGPT and Software Testing Education: Promises & Perils","venue":"ArXiv","year":2023,"referenceCount":25,"citationCount":0,"influentialCitationCount":0,"publicationDate":"07/02/2023","authors":"Sajed Jalil,Suzzana Rafi,Thomas D. LaToza,Kevin Moran,Wing Lam","id":"8927db4ee890bf42608752bb840bc9d7db556da1","summary":"How well ChatGPT performs when tasked with solving common questions in a popular software testing curriculum is examined, and the potential promise, and dangers related to the use ofChatGPT by students and instructors are discussed.","score":2},{"url":"https://www.semanticscholar.org/paper/1586dd245ae4cca00ea519fb35f27e2a0980476d","title":"Teaching Structured Vision&Language Concepts to Vision&Language Models","venue":"ArXiv","year":2022,"referenceCount":83,"citationCount":0,"influentialCitationCount":0,"publicationDate":"21/11/2022","authors":"Sivan Doveh,Assaf Arbelle,Sivan Harary,R. Panda,Roei Herzig,Eli Schwartz,Donghyun Kim,R. Giryes,R. Feris,S. Ullman,Leonid Karlinsky","id":"1586dd245ae4cca00ea519fb35f27e2a0980476d","summary":"Various techniques based on language structure understanding can be used to manipulate the textual part of off-the-shelf paired VL datasets that makes more effective use of existing VL pre-training datasets and does not require any additional data.","score":1},{"url":"https://www.semanticscholar.org/paper/6d4e540e1bed26679097139bf90c8652919e4e5c","title":"Explanation Regeneration via Information Bottleneck","venue":"ArXiv","year":2022,"referenceCount":57,"citationCount":0,"influentialCitationCount":0,"publicationDate":"19/12/2022","authors":"Qintong Li,Zhiyong Wu,Lingpeng Kong,Wei Bi","id":"6d4e540e1bed26679097139bf90c8652919e4e5c","summary":"This work develops an information bottleneck method EIB that regenerates the free-text explanation by polishing the single-pass output from the pretrained language model but retaining the information that supports the contents being explained.","score":1}]}